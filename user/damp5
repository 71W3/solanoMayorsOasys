<?php
session_start();

$username = isset($_SESSION['username']) ? $_SESSION['username'] : '';

if (!empty($username)) {
    include 'kon.php'; // Ensure this includes $conn

    $query = "SELECT * FROM users WHERE username = '$username'";
    $result = mysqli_query($con, $query);

    if ($result && mysqli_num_rows($result) > 0) {
        $row = mysqli_fetch_assoc($result);
        $_SESSION['user_id'] = $row['id'];
    } else {
        // User not found, handle accordingly
        echo "User not found.";
    }
} else {
    // No username in session, redirect to login
    header('Location: login.php');
    exit();
}

// Database connection
$servername = "localhost";
$dbusername = "root";
$dbpassword = "";
$dbname = "oasys";
$conn = new mysqli($servername, $dbusername, $dbpassword, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle appointment form submission
$appointment_success = false;
$appointment_error = "";
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['confirm_appointment'])) {
    // Get and sanitize form data
    $selected_date = $conn->real_escape_string($_POST['selected_date']);
    $selected_time = $conn->real_escape_string($_POST['selected_time']);
    // Convert selected_time (e.g., '1:30 PM') to 24-hour format for MySQL
    $selected_time_24 = date('H:i:s', strtotime($selected_time));
    $purpose = $conn->real_escape_string($_POST['purpose']);
    $attendees = intval($_POST['attendees']);
    $other_details = $conn->real_escape_string($_POST['other_details']);
    $user = $conn->real_escape_string($username);

    // Get user_id from session
    $user_id = isset($_SESSION['user_id']) ? intval($_SESSION['user_id']) : 0;

    // Get service_id from POST
    $service_id = isset($_POST['service_id']) ? intval($_POST['service_id']) : 0;

    // Check if slot is already pending
    $check_sql = "SELECT id FROM appointments 
                  WHERE date = '$selected_date' 
                  AND time = '$selected_time_24' 
                  AND status_enum = 'pending'";
    
    $check_result = $conn->query($check_sql);
    if ($check_result && $check_result->num_rows > 0) {
        $appointment_error = "This time slot is already pending. Please choose another slot.";
    } else {
        // Handle file uploads
        $attachments = [];
        if (!empty($_FILES['attachments']['name'][0])) {
            $uploadDir = 'uploads/';
            if (!is_dir($uploadDir)) {
                mkdir($uploadDir, 0777, true);
            }
            
            foreach ($_FILES['attachments']['tmp_name'] as $key => $tmp_name) {
                $file_name = basename($_FILES['attachments']['name'][$key]);
                $file_size = $_FILES['attachments']['size'][$key];
                $file_tmp = $_FILES['attachments']['tmp_name'][$key];
                $file_type = $_FILES['attachments']['type'][$key];
                
                // Validate file type
                $allowed_types = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 
                                 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
                $file_ext = strtolower(pathinfo($file_name, PATHINFO_EXTENSION));
                
                if (in_array($file_type, $allowed_types) && $file_size < 5000000) { // 5MB max
                    $new_file_name = uniqid() . '.' . $file_ext;
                    $destination = $uploadDir . $new_file_name;
                    
                    if (move_uploaded_file($file_tmp, $destination)) {
                        $attachments[] = $new_file_name;
                    }
                }
            }
        }
        
        $attachments_str = implode(',', $attachments);

        // Insert into appointments table
        $sql = "INSERT INTO appointments (user_id, service_id, date, time, purpose, attendees, other_details, attachments, status_enum, created_at)
                VALUES ($user_id, $service_id, '$selected_date', '$selected_time_24', '$purpose', $attendees, '$other_details', '$attachments_str', 'pending', NOW())";
        
        if ($conn->query($sql)) {
            // Set a session variable for the toast notification
            $_SESSION['appointment_success'] = true;
            header('Location: userAppointment.php?tab=pending');
            exit();
        } else {
            $appointment_error = "Error: " . $conn->error;
        }
    }
}

// Get appointment counts for visual indicators
$appointment_counts = [];
$date_result = $conn->query("
    SELECT date, status_enum as status, COUNT(*) as count 
    FROM appointments 
    GROUP BY date, status_enum
");

if ($date_result) {
    while ($row = $date_result->fetch_assoc()) {
        $appointment_counts[$row['date']][$row['status']] = $row['count'];
    }
} else {
    die("Query Error: " . $conn->error);
}

// Get unavailable time slots for selected date
$unavailable_slots = [];
if (isset($_POST['selected_date']) && !empty($_POST['selected_date'])) {
    $selected_date = $conn->real_escape_string($_POST['selected_date']);
    $result = $conn->query("SELECT time FROM appointments WHERE date = '$selected_date' AND (status_enum = 'pending' OR status_enum = 'approved')");
    while ($row = $result->fetch_assoc()) {
        $unavailable_slots[] = $row['time'];
    }
}

// Define time slots
$am_slots = [
    "8:00 AM", "8:30 AM", "9:00 AM", "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM"
];
$pm_slots = [
    "1:00 PM", "1:30 PM", "2:00 PM", "2:30 PM", "3:00 PM", "3:30 PM", "4:00 PM", "4:30 PM", "5:00 PM"
];
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mayor's Office - Online Appointment System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-blue: #0055a4;
            --primary-green: #28a745;
            --primary-orange: #ff6b35;
            --primary-yellow: #ffc107;
            --primary-light: #f8f9fa;
            --primary-dark: #212529;
            --subtle-blue-bg: #f3f7fb;
            --slot-available-bg: #f7fafd;
            --slot-available-color: #5a7bbd;
            --slot-selected-bg: #e3f7f1;
            --slot-selected-color: #2e8b57;
            --slot-selected-border: #2e8b57;
            --slot-pending-bg: #fffbe9;
            --slot-pending-color: #bfa700;
            --slot-pending-border: #ffe066;
            --slot-unavailable-bg: #f6f6f6;
            --slot-unavailable-color: #bdbdbd;
            --slot-approved-bg: #eafaf1;
            --slot-approved-color: #3bb77e;
            --slot-approved-border: #3bb77e;
            --slot-shadow: 0 2px 12px 0 rgba(90,123,189,0.07);
            --slot-focus: 0 0 0 3px #b3e6ff;
            --booking-bg: #f9fafb;
            --slot-available-bg: #f9fafb;
            --slot-available-color: #444;
            --slot-selected-bg: #eaf3fb;
            --slot-selected-color: #2563eb;
            --slot-selected-border: #2563eb;
            --slot-pending-bg: #f5f6fa;
            --slot-pending-color: #b1a06b;
            --slot-pending-border: #e5e7eb;
            --slot-unavailable-bg: #f3f4f6;
            --slot-unavailable-color: #bdbdbd;
            --slot-approved-bg: #f0fdf4;
            --slot-approved-color: #4caf50;
            --slot-approved-border: #e5e7eb;
            --slot-shadow: none;
            --slot-focus: 0 0 0 2px #dbeafe;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--subtle-blue-bg);
            color: #333;
            line-height: 1.6;
        }
        
        .header {
            background: linear-gradient(135deg, var(--primary-blue) 0%, #003a75 100%);
            color: white;
            padding: 15px 0;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 1000;
            transition: opacity 0.8s ease;
            opacity: 1;
            pointer-events: auto;
        }

        .header.hidden {
            opacity: 0;
            pointer-events: none;
        }

        .logo-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .logo {
            width: 60px;
            height: 60px;
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .logo i {
            font-size: 30px;
            color: var(--primary-blue);
        }
        
        .hero {
            background:;
            height: 550px;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            color: white;
        }
        
        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 85, 164, 0.7);
        }
        
        .hero-content {
            position: relative;
            z-index: 1;
            max-width: 800px;
            padding: 20px;
        }
        
        .section-title {
            position: relative;
            margin-bottom: 30px;
            padding-bottom: 15px;
            color: var(--primary-blue);
        }
        
        .section-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 70px;
            height: 4px;
            background: var(--primary-green);
            border-radius: 2px;
        }
        
        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
            margin: 40px 0;
        }
        
        .service-card {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.05);
        }
        
        .service-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        }
        
        .service-icon {
            height: 120px;
            background: rgba(0, 85, 164, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 50px;
            color: var(--primary-blue);
        }
        
        .service-content {
            padding: 25px;
        }
        
        .btn-book {
            background: var(--primary-green);
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: 30px;
            font-weight: 600;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-book:hover {
            background: #218838;
            transform: scale(1.05);
        }
        
        .booking-section {
            background: var(--booking-bg);
            padding: 60px 0;
        }
        
        .booking-container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            overflow: hidden;
            padding-bottom: 40px;
        }
        
        .booking-header {
            background: var(--primary-blue);
            color: white;
            padding: 20px 30px;
        }
        
        .booking-steps {
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: flex-start;
            gap: 20px;
            margin-bottom: 0;
            padding: 30px 0 0 0;
        }
        
        .step {
            width: 220px;
            min-height: unset;
            height: auto;
            text-align: center;
            padding: 16px;
            border-radius: 10px;
            background: rgba(0, 85, 164, 0.05);
            position: relative;
            box-shadow: none;
        }
        
        @media (max-width: 768px) {
            .booking-steps {
                flex-direction: column;
                align-items: stretch;
                padding: 20px 0 0 0;
            }
            .step {
                width: 100%;
            }
        }
        
        .step.active {
            background: rgba(40, 167, 69, 0.1);
            border: 2px solid var(--primary-green);
        }
        
        .step-number {
            width: 40px;
            height: 40px;
            background: var(--primary-blue);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            font-weight: bold;
        }
        
        .step.active .step-number {
            background: var(--primary-green);
        }
        
        .booking-content {
            display: flex;
            flex-direction: column;
            gap: 40px;
            padding: 30px;
        }
        
        @media (max-width: 992px) {
            .booking-content {
                flex-direction: column;
                gap: 20px;
                padding: 20px;
            }
        }
        
        .calendar-container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            padding: 25px;
            margin-bottom: 30px;
        }
        
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            grid-auto-rows: 50px;
            gap: 8px;
            min-height: 400px;
            background: transparent;
        }
        
        .calendar-day-header {
            text-align: center;
            font-weight: 600;
            padding: 10px;
            color: var(--primary-blue);
        }
        
        .calendar-day {
            height: 50px;
            border: 1px solid #eee;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
            position: relative;
        }
        
        .calendar-day:hover {
            background-color: rgba(0, 85, 164, 0.1);
        }
        
        .calendar-day.selected {
            background-color: var(--primary-blue);
            color: white;
            border-color: var(--primary-blue);
        }
        
        .calendar-day.disabled {
            background-color: #f8f9fa;
            color: #ccc;
            cursor: not-allowed;
        }
        
        .calendar-day.today::after {
            content: '';
            position: absolute;
            bottom: 5px;
            width: 6px;
            height: 6px;
            background-color: var(--primary-green);
            border-radius: 50%;
        }
        
        .time-slots-container {
            margin-top: 25px;
        }
        
        .time-group-header {
            font-size: 1.1rem;
            color: var(--primary-blue);
            margin-top: 20px;
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
            position: relative;
        }
        
        .time-group-header::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 100%;
            height: 1px;
            background: linear-gradient(90deg, transparent, #ccc, transparent);
        }
        
        .time-slots {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 15px;
        }
        
        .time-slot {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 0 16px;
            min-height: 38px;
            height: 38px;
            background: var(--slot-available-bg);
            border-radius: 8px;
            text-align: left;
            cursor: pointer;
            transition: background 0.15s, color 0.15s, border 0.15s;
            border: 1px solid transparent;
            color: var(--slot-available-color);
            font-family: 'Inter', system-ui, Arial, sans-serif;
            font-weight: 400;
            font-size: 1rem;
            box-shadow: none;
            position: relative;
            outline: none;
            margin-bottom: 6px;
            margin-top: 0;
            letter-spacing: 0.01em;
        }
        .time-slot:hover {
            background: #f3f6fa;
        }
        .time-slot:focus {
            box-shadow: var(--slot-focus);
        }
        .time-slot.selected {
            background: #111 !important;
            color: #fff !important;
            border: 3px solid #000 !important;
            font-weight: 700;
            box-shadow: none !important;
            z-index: 2;
            position: relative;
            /* Remove scaling, font-size, height, and extra padding */
            transition: 
                background 0.2s, 
                color 0.2s, 
                border 0.2s;
        }
        .time-slot.selected .slot-icon i,
        .time-slot.selected i.bi-check-lg {
            color: #fff !important;
        }
        .time-slot.unavailable {
            background: var(--slot-unavailable-bg) !important;
            color: var(--slot-unavailable-color) !important;
            border: 1px solid var(--slot-unavailable-bg) !important;
            cursor: not-allowed !important;
            pointer-events: none;
            opacity: 0.6;
        }
        .time-slot.unavailable .slot-icon svg {
            stroke: var(--slot-unavailable-color) !important;
        }
        .time-slot.approved {
            background: var(--slot-approved-bg) !important;
            color: var(--slot-approved-color) !important;
            border: 1px solid var(--slot-approved-border) !important;
            font-weight: 500;
        }
        .time-slot.approved .slot-icon svg {
            stroke: var(--slot-approved-color) !important;
        }
        .time-slot.pending {
            background: var(--slot-pending-bg) !important;
            color: var(--slot-pending-color) !important;
            border: 1px solid var(--slot-pending-border) !important;
            font-weight: 400;
        }
        .time-slot.pending .slot-icon svg {
            stroke: var(--slot-pending-color) !important;
        }
        
        .time-slot.pending::before {
            content: none !important;
        }
        
        .appointment-indicators {
            position: absolute;
            bottom: 5px;
            display: flex;
            justify-content: center;
            width: 100%;
            gap: 2px;
        }
        
        .appointment-indicator {
            width: 6px;
            height: 6px;
            border-radius: 50%;
        }
        
        .indicator-approved {
            background-color: var(--primary-green);
        }
        
        .indicator-pending {
            background-color: var(--primary-yellow);
        }
        
        .form-container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            padding: 30px;
        }
        
        .btn-submit {
            background: var(--primary-green);
            color: white;
            border: none;
            padding: 14px 35px;
            border-radius: 30px;
            font-weight: 600;
            font-size: 1.2rem;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
            min-width: 220px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }
        
        .btn-submit:hover {
            background: #218838;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }
        
        .btn-submit:active {
            transform: translateY(0);
        }
        
        .btn-submit.loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.3);
            animation: loadingPulse 1.5s infinite;
        }
        
        @keyframes loadingPulse {
            0% { opacity: 0; }
            50% { opacity: 0.5; }
            100% { opacity: 0; }
        }
        
        .btn-submit .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .btn-submit.loading .spinner {
            display: inline-block;
        }
        
        .btn-submit.success i {
            color: #fff;
            font-size: 1.5rem;
            animation: bounce 0.5s;
        }
        
        @keyframes bounce {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.2); }
        }
        
        .notification-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 2000;
            max-width: 400px;
        }
        
        .notification {
            animation: slideIn 0.5s forwards, fadeOut 0.5s forwards 4.5s;
            transform: translateX(100%);
            opacity: 0;
        }
        
        @keyframes slideIn {
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @keyframes fadeOut {
            to {
                opacity: 0;
            }
        }
        
        .faq-container {
            max-width: 800px;
            margin: 0 auto;
        }
        
        .accordion-button:not(.collapsed) {
            background-color: rgba(0, 85, 164, 0.1);
            color: var(--primary-blue);
            font-weight: 600;
        }
        
        .testimonial-card {
            background: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            margin: 20px 0;
        }
        
        .testimonial-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
        }
        
        .testimonial-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--primary-green) 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 24px;
            font-weight: bold;
        }
        
        .testimonial-rating {
            color: #ffc107;
            font-size: 20px;
            margin-top: 10px;
        }
        
        .footer {
            background: var(--primary-dark);
            color: white;
            padding: 50px 0 20px;
        }
        
        .footer-links a {
            color: rgba(255,255,255,0.7);
            text-decoration: none;
            display: block;
            margin-bottom: 10px;
            transition: all 0.3s;
        }
        
        .footer-links a:hover {
            color: white;
            padding-left: 5px;
        }
        
        .copyright {
            border-top: 1px solid rgba(255,255,255,0.1);
            padding-top: 20px;
            margin-top: 30px;
            text-align: center;
            color: rgba(255,255,255,0.5);
        }
        
        @media (max-width: 768px) {
            .booking-steps {
                flex-direction: column;
            }
            
            .hero {
                height: 300px;
            }
            
            .btn-submit {
                padding: 12px 25px;
                font-size: 1.1rem;
                min-width: 180px;
            }
        }
        
        @media (min-width: 769px) {
            .booking-steps {
                flex-direction: row;
            }
            .step {
                width: 220px;
                flex: unset;
            }
        }
        
        .time-divider {
            display: flex;
            align-items: center;
            margin: 25px 0;
            color: #6c757d;
        }
        
        .time-divider::before,
        .time-divider::after {
            content: '';
            flex: 1;
            height: 1px;
            background: linear-gradient(90deg, transparent, #ccc, transparent);
        }
        
        .time-divider span {
            padding: 0 15px;
            font-weight: 600;
        }
        
        /* Tooltip styling */
        .tooltip-inner {
            background-color: #ffc107;
            color: #333;
            font-weight: 500;
            padding: 8px 12px;
            border-radius: 4px;
        }
        
        .bs-tooltip-top .tooltip-arrow::before, 
        .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before {
            border-top-color: #ffc107;
        }
        
        /* Attachment styling */
        .attachment-preview {
            border: 1px dashed #ddd;
            border-radius: 8px;
            padding: 15px;
            margin-top: 15px;
            background: #f9f9f9;
            display: none;
        }
        
        .attachment-item {
            display: flex;
            align-items: center;
            padding: 8px;
            background: white;
            border-radius: 6px;
            margin-bottom: 8px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        .attachment-icon {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #e9ecef;
            border-radius: 4px;
            margin-right: 10px;
            color: #495057;
        }
        
        .attachment-info {
            flex-grow: 1;
        }
        
        .attachment-name {
            font-weight: 500;
            margin-bottom: 2px;
        }
        
        .attachment-size {
            color: #6c757d;
            font-size: 0.85rem;
        }
        
        .attachment-remove {
            color: #dc3545;
            cursor: pointer;
            padding: 5px;
        }
        
        .attachment-remove:hover {
            color: #bd2130;
        }
        .legend-dot {
            display: inline-block;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            margin-right: 6px;
            border: 2px solid #ccc;
        }
        .legend-approved {
            background: #28a745;
            border-color: #28a745;
        }
        .legend-pending {
            background: #ffc107;
            border-color: #ffc107;
        }
        .legend-available {
            background: #fff;
            border-color: #007bff;
        }
        .legend-unavailable {
            background: #eee;
            border-color: #bbb;
        }
        .time-slot.approved {
            background: #e6f9ed !important;
            color: #218838 !important;
            border: 2px solid #28a745 !important;
            font-weight: 600;
            position: relative;
        }
        .time-slot.approved::before {
            content: '\f26b'; /* bi-check-circle-fill */
            font-family: 'bootstrap-icons';
            color: #28a745;
            margin-right: 6px;
            font-size: 1.1em;
            vertical-align: middle;
        }
        .time-slot.pending {
            background: #fff8e1 !important;
            color: #856404 !important;
            border: 2px solid #ffc107 !important;
            font-weight: 600;
            position: relative;
            cursor: not-allowed !important;
            opacity: 0.5 !important;
            pointer-events: none !important;
            box-shadow: none !important;
        }
        .time-slot.pending::before {
            content: '\f335'; /* bi-hourglass-split */
            font-family: 'bootstrap-icons';
            color: #ffc107;
            margin-right: 6px;
            font-size: 1.1em;
            vertical-align: middle;
        }
        .time-slot.unavailable {
            background: #eee !important;
            color: #aaa !important;
            border: 1px solid #bbb !important;
            cursor: not-allowed !important;
            pointer-events: none;
            opacity: 0.7;
        }
        .time-slot.available {
            background: #fff !important;
            color: #007bff !important;
            border: 1px solid #007bff !important;
        }
        @media (max-width: 1200px) {
            .info-box {
                position: static !important;
                width: 100% !important;
                min-width: unset !important;
                margin-bottom: 20px;
            }
        }
        .time-slot.selected .slot-icon i {
            color: inherit !important;
            fill: inherit !important;
            font-size: inherit !important;
            text-shadow: none !important;
        }
        .time-slot .slot-icon {
            display: flex;
            align-items: center;
        }
        .tooltip.bs-tooltip-top .tooltip-arrow::before,
        .tooltip.bs-tooltip-bottom .tooltip-arrow::before,
        .tooltip.bs-tooltip-start .tooltip-arrow::before,
        .tooltip.bs-tooltip-end .tooltip-arrow::before {
            border-top-color: #111 !important;
            border-bottom-color: #111 !important;
            border-left-color: #111 !important;
            border-right-color: #111 !important;
        }

        .tooltip-inner {
            background-color: #111 !important;
            color: #fff !important;
            font-weight: 500;
            padding: 8px 14px;
            border-radius: 6px;
            font-size: 1rem;
            transition: background 0.3s, color 0.3s;
        }
    </style>
</head>
<body>
    <!-- Notification Container -->
    <div class="notification-container">
        <?php if($appointment_success): ?>
            <div class="notification alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i> 
                Appointment booked successfully! Status: Pending.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <?php elseif($appointment_error): ?>
            <div class="notification alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-circle-fill me-2"></i> 
                <?php echo $appointment_error; ?>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <?php endif; ?>
    </div>

    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div class="logo-container">
                    <div class="logo">
                        <i class="bi bi-building"></i>
                    </div>
                    <div>
                        <h3 class="mb-0">Solano Mayor's Office</h3>
                        <p class="mb-0">Online Appointment System</p>
                    </div>
                </div>
                
                <!-- Profile and Logout Section -->
                <div class="d-flex align-items-center">
                    <?php if($username): ?>
                        <div class="dropdown">
                            <button class="btn btn-link text-white dropdown-toggle d-flex align-items-center" 
                                    type="button" id="userDropdown" 
                                    data-bs-toggle="dropdown" 
                                    aria-expanded="false">
                                <div class="me-2">
                                    <i class="bi bi-person-circle fs-4"></i>
                                </div>
                                <span class="fw-bold"><?php echo htmlspecialchars($username); ?></span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#"><i class="bi bi-person me-2"></i>My Profile</a></li>
                                <li><a class="dropdown-item" href="userAppointment.php"><i class="bi bi-calendar-check me-2"></i>My Appointments</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <a class="dropdown-item text-danger" href="logout.php">
                                        <i class="bi bi-box-arrow-right me-2"></i>Logout
                                    </a>
                                </li>
                            </ul>
                        </div>
                    <?php else: ?>
                        <span class="fw-bold">Welcome!</span>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-content">
            <h1 class="display-4 fw-bold mb-3">Book Your Appointment Online</h1>
            <p class="lead mb-4">Save time and avoid queues by scheduling your visit to the Mayor's Office in advance</p>
            <a href="#booking" class="btn btn-primary btn-lg px-5 py-3">
                <i class="bi bi-calendar-plus me-2"></i>Book Appointment Now
            </a>
        </div>
    </section>

    <!-- Services Section -->
    <section class="container py-5">
        <div class="text-center mb-5">
            <h2 class="section-title d-inline-block">Our Services</h2>
            <p class="text-muted">Select from our range of municipal services</p>
        </div>
        
        <div class="services-grid">
            <!-- Service Cards -->
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-file-earmark-text"></i>
                </div>
                <div class="service-content">
                    <h4>Document Requests</h4>
                    <p class="text-muted">Request certificates, permits, and official documents</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-house-door"></i>
                </div>
                <div class="service-content">
                    <h4>Housing Services</h4>
                    <p class="text-muted">Apply for housing permits and assistance programs</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-building"></i>
                </div>
                <div class="service-content">
                    <h4>Business Licensing</h4>
                    <p class="text-muted">Register new businesses and renew existing licenses</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-people"></i>
                </div>
                <div class="service-content">
                    <h4>Community Programs</h4>
                    <p class="text-muted">Apply for social services and community programs</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-cash-coin"></i>
                </div>
                <div class="service-content">
                    <h4>Tax Payments</h4>
                    <p class="text-muted">Schedule payments for municipal taxes and fees</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-icon">
                    <i class="bi bi-person-lines-fill"></i>
                </div>
                <div class="service-content">
                    <h4>Meet the Mayor</h4>
                    <p class="text-muted">Request a personal meeting with the Mayor</p>
                    <button class="btn-book">
                        <i class="bi bi-calendar-plus"></i> Book Now
                    </button>
                </div>
            </div>
        </div>
    </section>

    <!-- Booking Section -->
    <section id="booking" class="booking-section">
        <div class="container">
            <div class="text-center mb-5">
                <h2 class="section-title d-inline-block">Book Your Appointment</h2>
                <p class="text-muted">Simple 3-step process to schedule your visit</p>
            </div>
            <div class="d-flex flex-row-reverse flex-wrap gap-4 align-items-start" style="min-height: 700px;">
                <div style="flex:1; min-width: 320px;">
                    <div class="booking-container">
                        <div class="booking-header">
                            <h3 class="mb-0">Document Request Service</h3>
                        </div>
                        <!-- Steps go above the calendar and form -->
                        <div class="booking-steps">
                            <div class="step active">
                                <div class="step-number">1</div>
                                <h5>Select Date & Time</h5>
                                <small>Choose your preferred slot</small>
                            </div>
                            <div class="step">
                                <div class="step-number">2</div>
                                <h5>Your Information</h5>
                                <small>Provide your details</small>
                            </div>
                            <div class="step">
                                <div class="step-number">3</div>
                                <h5>Confirmation</h5>
                                <small>Review and confirm</small>
                            </div>
                        </div>
                        <div class="booking-content">
                            <div class="calendar-container">
                                <div class="calendar-header">
                                    <h4 id="currentMonthYear">July 2025</h4>
                                    <div>
                                        <button id="prevMonth" class="btn btn-sm btn-outline-secondary me-2"><i class="bi bi-chevron-left"></i></button>
                                        <button id="nextMonth" class="btn btn-sm btn-outline-secondary"><i class="bi bi-chevron-right"></i></button>
                                    </div>
                                </div>
                                <!-- Legend for time slots -->
                                <div class="mb-3 d-flex flex-wrap align-items-center gap-3" style="font-size: 1rem;">
                                    <span class="d-flex align-items-center"><span class="legend-dot legend-approved me-1"></span> Approved</span>
                                    <span class="d-flex align-items-center"><span class="legend-dot legend-pending me-1"></span> Pending</span>
                                    <span class="d-flex align-items-center"><span class="legend-dot legend-available me-1"></span> Available</span>
                                    <span class="d-flex align-items-center"><span class="legend-dot legend-unavailable me-1"></span> Unavailable</span>
                                </div>
                                
                                <div class="calendar-grid"></div>
                                
                                <div class="time-slots-container">
                                    <h5 class="time-group-header">Morning (AM)</h5>
                                    <div class="time-slots" id="am-slots"></div>
                                    
                                    <div class="time-divider">
                                        <span>Afternoon</span>
                                    </div>
                                    
                                    <h5 class="time-group-header">Afternoon (PM)</h5>
                                    <div class="time-slots" id="pm-slots">
                                        <div class="mt-2 mb-3">
                                          <span style="color:#bbb;"><i class="bi bi-hourglass-split"></i> Unavailable</span>
                                          <span style="margin-left:20px;color:#007bff;"><span style="display:inline-block;width:16px;height:16px;border:1px solid #007bff;background:#fff;vertical-align:middle;margin-right:4px;"></span> Available</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-container">
                                <h4 class="mb-4">Your Information</h4>
                                <form method="post" id="appointmentForm" enctype="multipart/form-data">
                                    <input type="hidden" name="service_id" value="1">
                                    <input type="hidden" name="selected_date" id="selectedDateInput" value="<?php echo isset($_POST['selected_date']) ? $_POST['selected_date'] : ''; ?>">
                                    <input type="hidden" name="selected_time" id="selectedTimeInput" value="<?php echo isset($_POST['selected_time']) ? $_POST['selected_time'] : ''; ?>">
                                    <div class="row mb-3">
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">Purpose of Visit</label>
                                            <select class="form-select" name="purpose" id="purposeSelect" required>
                                                <option value="" selected disabled>Select purpose</option>
                                                <option>Certificate Request</option>
                                                <option>Business Permit</option>
                                                <option>Tax Payment</option>
                                                <option>Complaint</option>
                                                <option>Meeting</option>
                                                <option>Other</option>
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label class="form-label">Number of expected attendees</label>
                                            <input type="number" class="form-control" name="attendees" placeholder="e.g. 1-5" min="1" max="20" required>
                                        </div>
                                    </div>
                                    <div class="mb-3" id="otherDetailsContainer" style="display:none;">
                                        <label class="form-label">If others please specify</label>
                                        <textarea class="form-control" name="other_details" rows="3" placeholder="Any special requirements or additional information"></textarea>
                                    </div>
                                    
                                    <!-- File Attachment Section -->
                                    <div class="mb-4">
                                        <label class="form-label">Attachments (Optional)</label>
                                        <input class="form-control" type="file" name="attachments[]" id="fileInput" multiple accept=".pdf,.doc,.docx,.jpg,.jpeg,.png">
                                        <small class="text-muted">Upload PDF, Word documents, or images (max 5MB each)</small>
                                        
                                        <div class="attachment-preview" id="attachmentPreview">
                                            <div class="mb-2 fw-medium">Selected files:</div>
                                            <div id="fileList"></div>
                                        </div>
                                    </div>
                                    
                                    <div class="d-grid">
                                        <button class="btn-submit" type="submit" name="confirm_appointment" id="confirmBtn">
                                            <span class="spinner"></span>
                                            <i class="bi bi-calendar-check me-1"></i>
                                            <span>Confirm Appointment</span>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Testimonials -->
    <section class="container py-5">
        <div class="text-center mb-5">
            <h2 class="section-title d-inline-block">What Residents Say</h2>
            <p class="text-muted">Feedback from our community</p>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="testimonial-card">
                    <div class="testimonial-header">
                        <div class="testimonial-avatar">MJ</div>
                        <div>
                            <h5>Maria Javier</h5>
                            <p class="text-muted mb-0">Poblacion Resident</p>
                        </div>
                    </div>
                    <p>"Booking my business permit renewal was so easy with this system. I was in and out of the office in 15 minutes!"</p>
                    <div class="testimonial-rating">
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="testimonial-card">
                    <div class="testimonial-header">
                        <div class="testimonial-avatar">CR</div>
                        <div>
                            <h5>Carlos Reyes</h5>
                            <p class="text-muted mb-0">Lubing Resident</p>
                        </div>
                    </div>
                    <p>"I needed a barangay clearance urgently. The online appointment saved me hours of waiting. Excellent service!"</p>
                    <div class="testimonial-rating">
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-half"></i>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="bg-light py-5">
        <div class="container">
            <div class="text-center mb-5">
                <h2 class="section-title d-inline-block">Frequently Asked Questions</h2>
                <p class="text-muted">Find answers to common questions</p>
            </div>
            
            <div class="faq-container">
                <div class="accordion" id="faqAccordion">
                    <!-- FAQ Items -->
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingOne">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">
                                How far in advance can I book an appointment?
                            </button>
                        </h2>
                        <div id="collapseOne" class="accordion-collapse collapse show">
                            <div class="accordion-body">
                                You can book appointments up to 30 days in advance. Same-day appointments may be available depending on staff schedules.
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingTwo">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo">
                                What should I bring to my appointment?
                            </button>
                        </h2>
                        <div id="collapseTwo" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                Please bring a valid ID and any documents related to your appointment. Specific requirements will be listed in your confirmation email.
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingThree">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree">
                                Can I reschedule or cancel my appointment?
                            </button>
                        </h2>
                        <div id="collapseThree" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                Yes, you can reschedule or cancel your appointment up to 24 hours before your scheduled time through the link in your confirmation email.
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingFour">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour">
                                Is there a fee for using the online appointment system?
                            </button>
                        </h2>
                        <div id="collapseFour" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                No, the online appointment system is completely free to use. You'll only need to pay for any applicable service fees during your visit.
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingFive">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive">
                                What if I'm late for my appointment?
                            </button>
                        </h2>
                        <div id="collapseFive" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                If you arrive more than 15 minutes late, your appointment may be given to another resident. We recommend arriving 10 minutes early to complete any necessary paperwork.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-md-4 mb-4">
                    <div class="logo-container mb-3">
                        <div class="logo">
                            <i class="bi bi-building"></i>
                        </div>
                        <div>
                            <h4 class="text-white mb-0">Solano Mayor's Office</h4>
                            <p class="mb-0">Serving our community</p>
                        </div>
                    </div>
                    <p class="text-white-50">Providing efficient and accessible services to all residents of Solano.</p>
                </div>
                
                <div class="col-md-4 mb-4">
                    <h5 class="text-white mb-4">Quick Links</h5>
                    <div class="footer-links">
                        <a href="#">Home</a>
                        <a href="#">Services</a>
                        <a href="#">Book Appointment</a>
                        <a href="#">FAQs</a>
                        <a href="#">Contact Us</a>
                    </div>
                </div>
                
                <div class="col-md-4 mb-4">
                    <h5 class="text-white mb-4">Contact Information</h5>
                    <ul class="list-unstyled text-white-50">
                        <li class="mb-2"><i class="bi bi-geo-alt me-2"></i> Municipal Hall, Solano, Nueva Vizcaya</li>
                        <li class="mb-2"><i class="bi bi-telephone me-2"></i> (078) 123-4567</li>
                        <li class="mb-2"><i class="bi bi-envelope me-2"></i> info@solanomayor.gov.ph</li>
                        <li class="mb-2"><i class="bi bi-clock me-2"></i> Mon-Fri: 8:00 AM - 5:00 PM</li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                <p>&copy; 2025 Solano Mayor's Office. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips for pending slots
            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
            
            // Calendar functionality
            let currentDate = new Date();
            let currentMonth = currentDate.getMonth();
            let currentYear = currentDate.getFullYear();
            
            updateMonthYearDisplay();
            renderCalendar();
            initTimeSlots();
            setupFormSubmission();
            setupFileAttachments();
            
            // Service card booking buttons
            const bookButtons = document.querySelectorAll('.btn-book');
            bookButtons.forEach(button => {
                button.addEventListener('click', function() {
                    document.getElementById('booking').scrollIntoView({
                        behavior: 'smooth'
                    });
                });
            });
            
            // Header scroll behavior
            let lastScrollTop = 0;
            const header = document.querySelector('.header');
            
            window.addEventListener('scroll', () => {
                const currentScroll = window.pageYOffset || document.documentElement.scrollTop;
                
                if (currentScroll > lastScrollTop && currentScroll > 400) {
                    header.classList.add('hidden');
                } else {
                    header.classList.remove('hidden');
                }
                
                lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
            });
            
            // Calendar navigation
            document.getElementById('prevMonth').addEventListener('click', () => {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                updateMonthYearDisplay();
                renderCalendar();
            });
            
            document.getElementById('nextMonth').addEventListener('click', () => {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                updateMonthYearDisplay();
                renderCalendar();
            });
            
            // Functions
            function updateMonthYearDisplay() {
                const monthNames = ["January", "February", "March", "April", "May", "June",
                                  "July", "August", "September", "October", "November", "December"];
                document.getElementById('currentMonthYear').textContent = 
                    `${monthNames[currentMonth]} ${currentYear}`;
            }
            
            function renderCalendar() {
                const monthNames = ["January", "February", "March", "April", "May", "June",
                                  "July", "August", "September", "October", "November", "December"];
                const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                
                const today = new Date();
                today.setHours(0,0,0,0); // Remove time part

                const maxDate = new Date(today);
                maxDate.setDate(today.getDate() + 13); // 2 weeks = 14 days including today
                
                // Get first day of the month (0-6, Sunday-Saturday)
                const firstDay = new Date(currentYear, currentMonth, 1).getDay();
                // Get number of days in the month
                const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
                // Get today's date for comparison
                const isCurrentMonth = today.getMonth() === currentMonth && today.getFullYear() === currentYear;
                
                let calendarHTML = '';
                
                // Add day headers
                for (let i = 0; i < dayNames.length; i++) {
                    calendarHTML += `<div class="calendar-day-header">${dayNames[i]}</div>`;
                }
                
                // Add empty cells for days before the first day of the month
                for (let i = 0; i < firstDay; i++) {
                    calendarHTML += `<div class="calendar-day disabled"></div>`;
                }
                
                // Add days of the month
                for (let i = 1; i <= daysInMonth; i++) {
                    const dateObj = new Date(currentYear, currentMonth, i);
                    dateObj.setHours(0,0,0,0);

                    const isToday = isCurrentMonth && i === today.getDate();
                    const dateStr = `${currentYear}-${String(currentMonth+1).padStart(2, '0')}-${String(i).padStart(2, '0')}`;

                    // Check if date is in the allowed range
                    let isDisabled = dateObj < today || dateObj > maxDate;
                    
                    calendarHTML += `<div class="calendar-day${isToday ? ' today' : ''}${isDisabled ? ' disabled' : ''}" data-date="${dateStr}">${i}`;
                    
                    // Get appointment counts for this day
                    const approvedCount = <?php echo json_encode($appointment_counts); ?>[dateStr]?.approved || 0;
                    const pendingCount = <?php echo json_encode($appointment_counts); ?>[dateStr]?.pending || 0;
                    
                    // Add appointment indicators
                    if (approvedCount > 0 || pendingCount > 0) {
                        calendarHTML += `<div class="appointment-indicators">`;
                        
                        // Add approved indicators (green)
                        for (let j = 0; j < approvedCount; j++) {
                            calendarHTML += `<div class="appointment-indicator indicator-approved"></div>`;
                        }
                        
                        // Add pending indicators (yellow)
                        for (let j = 0; j < pendingCount; j++) {
                            calendarHTML += `<div class="appointment-indicator indicator-pending"></div>`;
                        }
                        
                        calendarHTML += `</div>`;
                    }
                    
                    calendarHTML += `</div>`;
                }
                
                // Fill remaining grid cells
                const totalCells = 42; // 6 weeks * 7 days
                const daysAdded = firstDay + daysInMonth;
                const remainingCells = totalCells - daysAdded;
                
                for (let i = 1; i <= remainingCells; i++) {
                    calendarHTML += `<div class="calendar-day disabled"></div>`;
                }
                
                // Update the calendar grid
                document.querySelector('.calendar-grid').innerHTML = calendarHTML;
                
                // Add click event listeners to calendar days
                const calendarDays = document.querySelectorAll('.calendar-day:not(.disabled)');
                calendarDays.forEach(day => {
                    day.addEventListener('click', function() {
                        // Remove selection from all days
                        calendarDays.forEach(d => d.classList.remove('selected'));
                        // Add selection to clicked day
                        this.classList.add('selected');
                        
                        // Format the selected date as YYYY-MM-DD
                        const selectedDate = this.dataset.date;
                        
                        // Update the hidden input
                        document.getElementById('selectedDateInput').value = selectedDate;

                        // AJAX to fetch unavailable slots
                        fetch('get_pending_slots.php', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                            body: 'date=' + encodeURIComponent(selectedDate)
                        })
                        .then(response => response.json())
                        .then(unavailableSlots => {
                            console.log('Unavailable slots:', unavailableSlots); // Debugging line
                            renderTimeSlots(unavailableSlots, amSlots, pmSlots);
                        });
                    });
                });
            }
            
            // Declare these at the top of your script, outside any function
            let selectedSlot = null;
            let unavailableSlotsGlobal = [];

            function initTimeSlots() {
                const timeSlots = document.querySelectorAll('.time-slot.available');
                timeSlots.forEach(slot => {
                    slot.addEventListener('click', function() {
                        selectedSlot = this.textContent.trim();
                        renderTimeSlots(unavailableSlotsGlobal, amSlots, pmSlots); // Pass the correct unavailableSlots if needed
                        document.getElementById('selectedTimeInput').value = selectedSlot;
                    });
                });
                // Remove 'selected' class from any pending slots just in case
                document.querySelectorAll('.time-slot.pending.selected').forEach(slot => slot.classList.remove('selected'));
            }

            function setupFormSubmission() {
                const form = document.getElementById('appointmentForm');
                const submitBtn = document.getElementById('confirmBtn');
                const btnText = submitBtn.querySelector('span:last-child');
                const btnIcon = submitBtn.querySelector('i');

                form.addEventListener('submit', function(e) {
                    // Validate form
                    const purpose = document.getElementById('purposeSelect').value;
                    const attendees = document.querySelector('input[name="attendees"]').value;
                    const selectedDate = document.getElementById('selectedDateInput').value;
                    const selectedTime = document.getElementById('selectedTimeInput').value;
                    const selectedSlot = Array.from(document.querySelectorAll('.time-slot.selected'))[0];
                    if (!purpose || !attendees || !selectedDate || !selectedTime
                        || !selectedSlot || selectedSlot.classList.contains('unavailable')) {
                        e.preventDefault();
                        alert('Please select a valid, available time slot.');
                        return;
                    }
                    
                    // Show loading state
                    submitBtn.classList.add('loading');
                    btnIcon.classList.add('d-none');
                    btnText.textContent = 'Processing...';
                    
                    // Simulate processing delay (in real app, this would be the server response time)
                    setTimeout(() => {
                        // Show success state
                        submitBtn.classList.remove('loading');
                        btnIcon.classList.remove('d-none');
                        btnIcon.classList.remove('bi-calendar-check');
                        btnIcon.classList.add('bi-check-circle');
                        btnText.textContent = 'Appointment Confirmed!';
                        
                        // Disable button to prevent multiple submissions
                        submitBtn.disabled = true;
                        
                        // Reset after a few seconds
                        setTimeout(() => {
                            btnIcon.classList.remove('bi-check-circle');
                            btnIcon.classList.add('bi-calendar-check');
                            btnText.textContent = 'Confirm Appointment';
                            submitBtn.disabled = false;
                        }, 3000);
                    }, 1500);
                });
            }
            
            function setupFileAttachments() {
                const fileInput = document.getElementById('fileInput');
                const fileList = document.getElementById('fileList');
                const attachmentPreview = document.getElementById('attachmentPreview');
                
                fileInput.addEventListener('change', function() {
                    fileList.innerHTML = '';
                    
                    if (this.files.length > 0) {
                        attachmentPreview.style.display = 'block';
                        
                        for (let i = 0; i < this.files.length; i++) {
                            const file = this.files[i];
                            const fileSize = formatFileSize(file.size);
                            const fileExt = getFileExtension(file.name);
                            
                            const attachmentItem = document.createElement('div');
                            attachmentItem.className = 'attachment-item';
                            
                            attachmentItem.innerHTML = `
                                <div class="attachment-icon">
                                    <i class="bi ${getFileIcon(fileExt)}"></i>
                                </div>
                                <div class="attachment-info">
                                    <div class="attachment-name">${file.name}</div>
                                    <div class="attachment-size">${fileSize}</div>
                                </div>
                                <div class="attachment-remove" data-index="${i}">
                                    <i class="bi bi-x-lg"></i>
                                </div>
                            `;
                            
                            fileList.appendChild(attachmentItem);
                        }
                    } else {
                        attachmentPreview.style.display = 'none';
                    }
                });
                
                // Handle file removal
                fileList.addEventListener('click', function(e) {
                    if (e.target.closest('.attachment-remove')) {
                        const index = e.target.closest('.attachment-remove').dataset.index;
                        
                        // Create a new DataTransfer object to update the file input
                        const dataTransfer = new DataTransfer();
                        const files = Array.from(fileInput.files);
                        
                        // Remove the file at the specified index
                        files.splice(index, 1);
                        
                        // Add the remaining files to the DataTransfer object
                        files.forEach(file => {
                            dataTransfer.items.add(file);
                        });
                        
                        // Update the file input
                        fileInput.files = dataTransfer.files;
                        
                        // Trigger the change event to update the preview
                        const event = new Event('change');
                        fileInput.dispatchEvent(event);
                    }
                });
            }
            
            function getFileExtension(filename) {
                return filename.slice((filename.lastIndexOf('.') + 1)).toLowerCase();
            }
            
            function getFileIcon(extension) {
                const icons = {
                    'pdf': 'bi-file-earmark-pdf',
                    'doc': 'bi-file-earmark-word',
                    'docx': 'bi-file-earmark-word',
                    'jpg': 'bi-file-earmark-image',
                    'jpeg': 'bi-file-earmark-image',
                    'png': 'bi-file-earmark-image'
                };
                
                return icons[extension] || 'bi-file-earmark';
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            // Purpose select show/hide 'Other' details
            var purposeSelect = document.getElementById('purposeSelect');
            var otherDetailsContainer = document.getElementById('otherDetailsContainer');
            if (purposeSelect) {
                purposeSelect.addEventListener('change', function() {
                    if (this.value === 'Other') {
                        otherDetailsContainer.style.display = '';
                    } else {
                        otherDetailsContainer.style.display = 'none';
                    }
                });
                // On page load, check if 'Other' is selected
                if (purposeSelect.value === 'Other') {
                    otherDetailsContainer.style.display = '';
                }
            }

            function updateTimeSlots(unavailableSlots) {
                // AM slots
                document.querySelectorAll('.time-slots').forEach((container, idx) => {
                    const slots = idx === 0 ? <?php echo json_encode($am_slots); ?> : <?php echo json_encode($pm_slots); ?>;
                    container.innerHTML = '';
                    slots.forEach(slot => {
                        if (unavailableSlots.includes(slot)) {
                            container.innerHTML += `<div class="time-slot unavailable" style="background:#eee;color:#aaa;cursor:not-allowed;pointer-events:none;opacity:0.7;"><i class="bi bi-hourglass-split"></i> ${slot}</div>`;
                        } else {
                            container.innerHTML += `<div class="time-slot">${slot}</div>`;
                        }
                    });
                });
                initTimeSlots(); // re-attach click handlers
            }

            function formatTimeToDisplay(timeStr) {
                // timeStr is like '09:00:00'
                const [hour, minute] = timeStr.split(':');
                let h = parseInt(hour, 10);
                const ampm = h >= 12 ? 'PM' : 'AM';
                h = h % 12 || 12;
                return `${h}:${minute} ${ampm}`;
            }

            // Pass PHP slot arrays to JS
            const amSlots = <?php echo json_encode($am_slots); ?>;
            const pmSlots = <?php echo json_encode($pm_slots); ?>;
            // Initial render for today (or selected date if any)
            let selectedDate = document.getElementById('selectedDateInput').value || new Date().toISOString().slice(0,10);
            renderTimeSlots([], amSlots, pmSlots);

            function renderTimeSlots(unavailableSlots, amSlots, pmSlots) {
                unavailableSlotsGlobal = unavailableSlots; // Save for re-render
                const normalizedUnavailable = unavailableSlots.map(s => s.toUpperCase().trim());
                const amContainer = document.getElementById('am-slots');
                amContainer.innerHTML = '';
                amSlots.forEach(slot => {
                    let slotClass = '';
                    let icon = '';
                    let style = '';
                    let isSelected = (slot === selectedSlot);
                    let tooltip = '';
                    if (normalizedUnavailable.includes(slot.toUpperCase().trim())) {
                        slotClass = 'time-slot pending';
                        icon = `<span class="slot-icon"><i class="bi bi-hourglass-split"></i></span>`;
                        style = 'background:#fff8e1;';
                        tooltip = 'This timeslot is pending, just waiting for approval';
                    } else {
                        slotClass = 'time-slot available';
                        icon = `<span class="slot-icon"><i class="bi bi-calendar-plus-fill"></i></span>`;
                        style = 'background:#eaf3fb;';
                        tooltip = 'This timeslot is available';
                    }
                    amContainer.innerHTML += `<div class="${slotClass}${isSelected ? ' selected' : ''}" tabindex="0" style="${style}" data-bs-toggle="tooltip" data-bs-placement="top" title="${tooltip}">${icon}<span>${slot}</span></div>`;
                });
                const pmContainer = document.getElementById('pm-slots');
                pmContainer.innerHTML = '';
                pmSlots.forEach(slot => {
                    let slotClass = '';
                    let icon = '';
                    let style = '';
                    let isSelected = (slot === selectedSlot);
                    let tooltip = '';
                    if (normalizedUnavailable.includes(slot.toUpperCase().trim())) {
                        slotClass = 'time-slot pending';
                        icon = `<span class="slot-icon"><i class="bi bi-hourglass-split"></i></span>`;
                        style = 'background:#fff8e1;';
                        tooltip = 'This timeslot is pending, just waiting for approval';
                    } else {
                        slotClass = 'time-slot available';
                        icon = `<span class="slot-icon"><i class="bi bi-calendar-plus-fill"></i></span>`;
                        style = 'background:#eaf3fb;';
                        tooltip = 'This timeslot is available';
                    }
                    pmContainer.innerHTML += `<div class="${slotClass}${isSelected ? ' selected' : ''}" tabindex="0" style="${style}" data-bs-toggle="tooltip" data-bs-placement="top" title="${tooltip}">${icon}<span>${slot}</span></div>`;
                });
                initTimeSlots();
                // After rendering slots in renderTimeSlots, re-initialize Bootstrap tooltips:
                const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                    new bootstrap.Tooltip(tooltipTriggerEl);
                });
            }

            // On calendar day click, fetch unavailable slots and re-render
            function fetchAndRenderSlots(date) {
                fetch('get_pending_slots.php', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: 'date=' + encodeURIComponent(date)
                })
                .then(response => response.json())
                .then(unavailableSlots => {
                    console.log('Unavailable slots:', unavailableSlots); // Debugging line
                    renderTimeSlots(unavailableSlots, amSlots, pmSlots);
                });
            }

            // Update calendar day click handler to use fetchAndRenderSlots
            function updateCalendarDayHandlers() {
                const calendarDays = document.querySelectorAll('.calendar-day:not(.disabled)');
                calendarDays.forEach(day => {
                    day.addEventListener('click', function() {
                        calendarDays.forEach(d => d.classList.remove('selected'));
                        this.classList.add('selected');
                        selectedDate = this.dataset.date;
                        document.getElementById('selectedDateInput').value = selectedDate;
                        fetchAndRenderSlots(selectedDate);
                    });
                });
            }
            // Call after calendar is rendered
            updateCalendarDayHandlers();

            // On page load, fetch slots for initial date
            fetchAndRenderSlots(selectedDate);
        });
    </script>
</body>
</html>