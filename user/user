<?php
session_start();
$show_toast = false;
$show_reschedule_toast = false;
if (isset($_SESSION['appointment_success'])) {
    $show_toast = true;
    unset($_SESSION['appointment_success']);
}
if (isset($_SESSION['reschedule_success'])) {
    $show_reschedule_toast = true;
    unset($_SESSION['reschedule_success']);
}




// Handle tab parameter for navigation
$active_tab = 'upcoming'; // default tab
if (isset($_GET['tab'])) {
    $valid_tabs = ['upcoming', 'pending', 'lapsed', 'history'];
    if (in_array($_GET['tab'], $valid_tabs)) {
        $active_tab = $_GET['tab'];
    }
}

// Handle show_appointment parameter for auto-opening appointment details
$show_appointment_id = null;
if (isset($_GET['show_appointment'])) {
    $show_appointment_id = intval($_GET['show_appointment']);
}

// --- Restore your original code below this line ---

// Database connection
$servername = "localhost";
$dbusername = "root";
$dbpassword = "";
$dbname = "my_auth_db";
$conn = new mysqli($servername, $dbusername, $dbpassword, $dbname);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch services for dropdown
$services = [];
$serviceResult = $conn->query("SELECT id, name FROM services");
if ($serviceResult && $serviceResult->num_rows > 0) {
    while ($service = $serviceResult->fetch_assoc()) {
        $services[$service['id']] = $service['name'];
    }
}

// Initialize user variables
$username = isset($_SESSION['username']) ? $_SESSION['username'] : 'Guest';
$user_id = isset($_SESSION['user_id']) ? $_SESSION['user_id'] : null;
$user_initials = $username ? strtoupper(substr($username, 0, 2)) : 'GU';

// Status mapping
$statusMap = [
    'Pending' => 'Pending Approval',
    'Approved' => 'Confirmed',
    'Declined' => 'Declined',
    'declined' => 'Declined',
    'Completed' => 'Completed',
    'Cancelled' => 'Cancelled',
    'cancelled' => 'Cancelled'
];

// Fetch appointments from database
$appointments = [];
if ($user_id) {
    $sql = "SELECT 
                a.id, 
                a.purpose AS title, 
                COALESCE(s.name, 'General Service') AS service,
                a.service_id,
                a.date, 
                a.time, 
                a.status_enum,
                a.purpose,
                a.attendees,
                a.created_at,
                a.updated_at,
                a.other_details,
                a.attachments,
                d.reason AS decline_reason  
            FROM appointments a
            LEFT JOIN services s ON a.service_id = s.id 
            LEFT JOIN decline_table d ON a.id = d.app_id
            WHERE a.user_id = ?";

    $stmt = $conn->prepare($sql);
    $stmt->bind_param("i", $user_id);
    $stmt->execute();
    $result = $stmt->get_result();
    
    while ($row = $result->fetch_assoc()) {
        $status = $statusMap[$row['status_enum']] ?? $row['status_enum'];
        
        // Process attachments
        $attachmentFiles = [];
        if ($row['attachments']) {
            $attachments = explode(',', $row['attachments']);
            foreach ($attachments as $attachment) {
                $fileType = pathinfo($attachment, PATHINFO_EXTENSION);
                $iconClass = '';
                $colorClass = '';
                
                // Determine icon and color based on file type
                switch (strtolower($fileType)) {
                    case 'pdf':
                        $iconClass = 'bi-file-earmark-pdf';
                        $colorClass = 'pdf-color';
                        break;
                    case 'jpg':
                    case 'jpeg':
                    case 'png':
                    case 'gif':
                        $iconClass = 'bi-file-earmark-image';
                        $colorClass = 'image-color';
                        break;
                    case 'doc':
                    case 'docx':
                        $iconClass = 'bi-file-earmark-word';
                        $colorClass = 'doc-color';
                        break;
                    case 'xls':
                    case 'xlsx':
                        $iconClass = 'bi-file-earmark-excel';
                        $colorClass = 'sheet-color';
                        break;
                    case 'txt':
                        $iconClass = 'bi-file-earmark-text';
                        $colorClass = 'text-color';
                        break;
                    case 'zip':
                    case 'rar':
                        $iconClass = 'bi-file-earmark-zip';
                        $colorClass = 'archive-color';
                        break;
                    default:
                        $iconClass = 'bi-file-earmark';
                        $colorClass = 'text-muted';
                }
                
                $attachmentFiles[] = [
                    'name' => $attachment,
                    'icon' => $iconClass,
                    'color' => $colorClass,
                    'type' => $fileType
                ];
            }
        }
        
       $appointments[] = [
            'id' => $row['id'],
            'app_id' => 'APP-' . $row['id'],
            'title' => $row['title'],
            'service' => $row['service'],
            'service_id' => $row['service_id'],
            'department' => 'Mayor\'s Office',
            'officer' => 'To be assigned',
            'date' => date('F j, Y', strtotime($row['date'])),
            'time' => date('g:i A', strtotime($row['time'])),
            'status' => $status,
            'purpose' => $row['purpose'],
            'attendees' => $row['attendees'],
            'requested' => date('F j, Y g:i A', strtotime($row['created_at'])),
            'updated' => $row['updated_at'] ? date('F j, Y g:i A', strtotime($row['updated_at'])) : '',
            'progress' => $status === 'Pending' || $status === 'Pending Approval' ? 30 : ($status === 'Confirmed' ? 60 : 100),
            'attachments' => $attachmentFiles,
            'timeline' => getTimeline($status, $row),
            'decline_reason' => $row['decline_reason'] ?? null // Added decline reason
        ];
    }
    $stmt->close();
}

// Function to generate timeline based on status
function getTimeline($status, $row) {
    $baseTimeline = [
        [
            'step' => 'Appointment Requested', 
            'date' => date('F j, Y g:i A', strtotime($row['created_at'])), 
            'status' => 'completed'
        ]
    ];
    
    switch ($status) {
        case 'Confirmed':
            return array_merge($baseTimeline, [
                ['step' => 'Appointment Confirmed', 'date' => date('F j, Y g:i A', strtotime($row['created_at'])), 'status' => 'completed'],
                ['step' => 'Scheduled', 'date' => date('F j, Y', strtotime($row['date'])) . ' at ' . date('g:i A', strtotime($row['time'])), 'status' => 'active'],
                ['step' => 'Completed', 'date' => '', 'status' => 'pending']
            ]);
        case 'Completed':
            $completedDate = $row['updated_at'] ? date('F j, Y g:i A', strtotime($row['updated_at'])) : date('F j, Y g:i A');
            return array_merge($baseTimeline, [
                ['step' => 'Appointment Confirmed', 'date' => date('F j, Y g:i A', strtotime($row['created_at'])), 'status' => 'completed'],
                ['step' => 'Scheduled', 'date' => date('F j, Y', strtotime($row['date'])) . ' at ' . date('g:i A', strtotime($row['time'])), 'status' => 'completed'],
                ['step' => 'Completed', 'date' => $completedDate, 'status' => 'completed']
            ]);
        case 'Cancelled':
            $cancelledDate = $row['updated_at'] ? date('F j, Y g:i A', strtotime($row['updated_at'])) : date('F j, Y g:i A');
            return array_merge($baseTimeline, [
                ['step' => 'Cancelled', 'date' => $cancelledDate, 'status' => 'completed']
            ]);
        case 'Declined':
            $declinedDate = $row['updated_at'] ? date('F j, Y g:i A', strtotime($row['updated_at'])) : date('F j, Y g:i A');
            return array_merge($baseTimeline, [
                ['step' => 'Declined', 'date' => $declinedDate, 'status' => 'completed']
            ]);
        default: // Pending
            return array_merge($baseTimeline, [
                ['step' => 'Pending Approval', 'date' => '', 'status' => 'active'],
                ['step' => 'Confirmation', 'date' => '', 'status' => 'pending'],
                ['step' => 'Scheduled', 'date' => '', 'status' => 'pending']
            ]);
    }
}

// Count appointment types
$counts = ['pending' => 0, 'upcoming' => 0, 'completed' => 0, 'cancelled' => 0, 'declined' => 0, 'lapsed' => 0];
foreach ($appointments as $app) {
    switch ($app['status']) {
        case 'Pending Approval':
            $appointmentDateTime = strtotime($app['date'] . ' ' . $app['time']);
            if ($appointmentDateTime >= time()) $counts['pending']++;
            break;
        case 'Confirmed': $counts['upcoming']++; break;
        case 'Completed': $counts['completed']++; break;
        case 'Cancelled': $counts['cancelled']++; break;
        case 'Declined': $counts['declined']++; break;
        case 'Lapsed': $counts['lapsed']++; break;
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solano Mayor's Office - Appointment System</title>
    
    <!-- Preload critical resources -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"></noscript>
    <link rel="preload" href="userStyles/userAppointment.css?v=<?= time() ?>" as="style">
    <link rel="preload" href="images/logooo.png" as="image">
    
    <!-- Critical CSS inline for faster LCP -->
    <style>
        body{margin:0;padding:0;font-family:'Poppins',sans-serif;background:#f8f9fa;line-height:1.6;min-height:100vh}
        .header{background:linear-gradient(135deg,#0055a4 0%,#003d7a 100%);padding:0.75rem 0;box-shadow:0 2px 10px rgba(0,0,0,0.1)}
        .logo-container{display:flex;align-items:center;gap:0.75rem}
        .app-container{max-width:1200px;margin:0 auto;padding:2rem}
        .dashboard-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:1.5rem;margin-bottom:2rem;max-width:1200px;margin-left:auto;margin-right:auto}
        .dashboard-card{background:white;border-radius:12px;padding:1.5rem;box-shadow:0 2px 8px rgba(0,0,0,0.08);cursor:pointer;transition:transform 0.2s ease;border-left:4px solid transparent;min-height:120px;display:flex;flex-direction:column;justify-content:space-between}
        .dashboard-card:hover{transform:translateY(-2px);box-shadow:0 4px 16px rgba(0,0,0,0.12)}
        .card-header{display:flex;align-items:center;gap:1rem;justify-content:flex-start}
        .card-icon{width:48px;height:48px;border-radius:12px;display:flex;align-items:center;justify-content:center;font-size:1.5rem;color:white;flex-shrink:0}
        .upcoming .card-icon{background:#28a745}
        .pending-card .card-icon{background:#ffc107;color:#333}
        .history-card .card-icon{background:#6c757d}
        .lapsed-card .card-icon{background:#dc3545}
        .card-info{flex:1;text-align:left}
        .card-info h4{margin:0;font-size:2rem;font-weight:700;color:#333}
        .card-info p{margin:0;color:#666;font-size:0.9rem;text-transform:uppercase;letter-spacing:0.5px}
        .card-arrow{color:#ccc;font-size:1.2rem}
        .appointment-card{background:white;border-radius:8px;padding:1.5rem;margin-bottom:1rem;box-shadow:0 2px 4px rgba(0,0,0,0.08);cursor:pointer;transition:transform 0.2s ease}
        .appointment-card:hover{transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,0.12)}
        .appointment-header{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:1rem}
        .status-badge{padding:0.25rem 0.75rem;border-radius:20px;font-size:0.75rem;font-weight:600;text-transform:uppercase;letter-spacing:0.5px}
        .badge-confirmed{background:#d4edda;color:#155724}
        .badge-pending{background:#fff3cd;color:#856404}
        .badge-completed{background:#d1ecf1;color:#0c5460}
        .badge-cancelled{background:#f8d7da;color:#721c24}
        .badge-declined{background:#f8d7da;color:#721c24}
        .appointment-details{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:1rem}
        .detail-item{display:flex;flex-direction:column;gap:0.25rem}
        .detail-label{font-size:0.8rem;color:#666;font-weight:600;text-transform:uppercase;letter-spacing:0.3px}
        .detail-value{font-size:0.9rem;color:#333;font-weight:500}
        .appointment-actions{display:flex;gap:0.5rem;margin-top:1rem;flex-wrap:wrap}
        .action-btn{padding:0.5rem 1rem;border-radius:6px;border:1px solid;font-size:0.8rem;font-weight:500;text-decoration:none;display:inline-flex;align-items:center;gap:0.5rem;cursor:pointer;transition:all 0.2s ease}
        .btn-outline{background:white;color:#0d6efd;border-color:#0d6efd}
        .btn-outline:hover{background:#0d6efd;color:white}
        .btn-danger{background:#dc3545;color:white;border-color:#dc3545}
        .btn-danger:hover{background:#c82333;border-color:#bd2130}
        @media(max-width:768px){
            .app-container{padding:1rem}
            .dashboard-grid{grid-template-columns:1fr;gap:1rem}
            .dashboard-card{padding:1rem}
            .card-info h4{font-size:1.5rem}
            .appointment-details{grid-template-columns:1fr}
            .appointment-actions{flex-direction:column}
        }
    </style>
    
    <!-- Load non-critical CSS asynchronously -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" media="print" onload="this.media='all'">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" media="print" onload="this.media='all'">
    <link rel="stylesheet" href="userStyles/userAppointment.css?v=<?= time() ?>">
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://cdn.jsdelivr.net">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div class="logo-container">
                    <img src="images/logooo.png" alt="Solano Mayor's Office Logo" width="85" height="45" style="width: 85px; height: 45px;" loading="eager">
                    <div>
                        <h3 class="mb-0">Solano Mayor's Office</h3>
                        <p class="mb-0">Online Appointment System</p>
                    </div>
                </div>
                
                <!-- Profile Section -->
                <div class="dropdown profile-dropdown">
                    <button class="btn btn-link text-white d-flex align-items-center p-0 profile-btn" type="button" id="profileDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-person-circle me-2" style="font-size: 1.5rem;"></i>
                        <div class="me-2">
                            <div class="text-white fw-bold"><?= htmlspecialchars($username) ?></div>
                        </div>
                        <i class="bi bi-chevron-down text-white-50 dropdown-arrow"></i>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end profile-menu" aria-labelledby="profileDropdown">
                        <li class="dropdown-header">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-person-circle me-2" style="font-size: 1.25rem; color: #6c757d;"></i>
                                <div>
                                    <div class="fw-bold"><?= htmlspecialchars($username) ?></div>
                                    <small class="text-muted">Resident</small>
                                </div>
                            </div>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="userSide.php"><i class="bi bi-calendar-plus me-2 text-primary"></i>Set Appointment</a></li>
                        <li><a class="dropdown-item" href="userProfile.php"><i class="bi bi-person me-2 text-info"></i>My Profile</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item text-danger" href="../logout.php"><i class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <div class="app-container">
        <div class="mb-4">
            <a href="userSide.php" class="btn btn-outline-primary rounded-pill px-4 py-2 d-inline-flex align-items-center" style="gap:0.5rem;font-weight:500;">
                <i class="bi bi-arrow-left"></i> Back to Set Appointments
            </a>
        </div>

        <?php if ($show_toast): ?>
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
          <div id="successToast" class="toast align-items-center text-bg-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
              <div class="toast-body">
                Appointment booked successfully! You will receive updates via Gmail or SMS.
              </div>
              <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
          </div>
        </div>
        <script>
          setTimeout(() => {
            var toastEl = document.getElementById('successToast');
            if (toastEl) {
              var toast = new bootstrap.Toast(toastEl);
              toast.show();
            }
          }, 500);
        </script>
        <?php endif; ?>
        <?php if ($show_reschedule_toast): ?>
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
          <div id="rescheduleToast" class="toast align-items-center text-bg-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
              <div class="toast-body">
                <i class="bi bi-calendar-check me-2"></i>Appointment rescheduled successfully!
              </div>
              <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
          </div>
        </div>
        <script>
          setTimeout(() => {
            var toastEl = document.getElementById('rescheduleToast');
            if (toastEl) {
              var toast = new bootstrap.Toast(toastEl);
              toast.show();
            }
          }, 500);
        </script>
        <?php endif; ?>
        <?php if (isset($_SESSION['update_success'])): ?>
            <div class="position-fixed top-0 end-0 p-3" style="z-index: 2000">
                <div id="updateToast" class="toast align-items-center text-bg-success border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            Appointment updated successfully!
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            </div>
            <script>
                document.addEventListener('DOMContentLoaded', function() {
                    var toastEl = document.getElementById('updateToast');
                    if (toastEl) {
                        var toast = new bootstrap.Toast(toastEl, { delay: 3500 });
                        toast.show();
                    }
                });
            </script>
            <?php unset($_SESSION['update_success']); ?>
        <?php endif; ?>
        
        <!-- Welcome Card -->
        <div class="welcome-card">
            <div class="d-flex flex-column flex-md-row align-items-center">
                <div class="flex-grow-1 mb-3 mb-md-0">
                    <h4 class="mb-2">Your Appointments</h4>
                    <p class="mb-0 text-muted">Manage your scheduled appointments and track their progress</p>
                </div>
                <a href="userSide.php#calendar" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i>Book New Appointment
                </a>
            </div>
        </div>
        
        <!-- Dashboard Grid -->
        <div class="dashboard-grid" id="dashboardGrid">
            <div class="dashboard-card" data-category="upcoming" style="min-height: 120px;">
                <div class="card-header">
                    <div class="card-icon upcoming">
                        <i class="bi bi-calendar-check"></i>
                    </div>
                    <div class="card-info">
                        <h4><?= $counts['upcoming'] ?></h4>
                        <p>Upcoming</p>
                    </div>
                </div>
                <div class="card-arrow">
                    <i class="bi bi-chevron-right"></i>
                </div>
            </div>

            <div class="dashboard-card pending-card" data-category="pending" style="min-height: 120px;">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="bi bi-clock-history"></i>
                    </div>
                    <div class="card-info">
                        <h4><?= $counts['pending'] ?></h4>
                        <p>Pending</p>
                    </div>
                </div>
                <div class="card-arrow">
                    <i class="bi bi-chevron-right"></i>
                </div>
            </div>

            <div class="dashboard-card history-card" data-category="history" style="min-height: 120px;">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="bi bi-clock-history"></i>
                    </div>
                    <div class="card-info">
                        <h4><?= $counts['completed'] + $counts['cancelled'] + $counts['declined'] ?></h4>
                        <p>History</p>
                    </div>
                </div>
                <div class="card-arrow">
                    <i class="bi bi-chevron-right"></i>
                </div>
            </div>

            <div class="dashboard-card lapsed-card" data-category="lapsed" style="min-height: 120px;">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="bi bi-exclamation-triangle"></i>
                    </div>
                    <div class="card-info">
                        <h4><?= $counts['lapsed'] ?></h4>
                        <p>Lapsed</p>
                    </div>
                </div>
                <div class="card-arrow">
                    <i class="bi bi-chevron-right"></i>
                </div>
            </div>
        </div>
        
        <!-- Appointment Sections -->
        <div class="appointment-sections">
            <div class="section-content" id="appointmentContent">
                <!-- Upcoming Appointments Tab -->
                <div class="tab-pane fade <?= $active_tab === 'upcoming' ? 'show active' : '' ?>" id="upcoming" role="tabpanel">
                    <?php if($counts['upcoming'] > 0): ?>
                        <?php 
                        // Upcoming Appointments: sort by requested (created_at) DESC
                        $upcomingApps = array_filter($appointments, function($app) { return $app['status'] === 'Confirmed'; });
                        usort($upcomingApps, function($a, $b) {
                            return strtotime($b['requested']) - strtotime($a['requested']);
                        });
                        foreach ($upcomingApps as $app): ?>
                            <div class="appointment-card" 
                                 data-appointment='<?= htmlspecialchars(json_encode($app), ENT_QUOTES, 'UTF-8') ?>'>
                                <div class="appointment-header">
                                    <div>
                                        <div class="appointment-ref"><?= $app['app_id'] ?></div>
                                        <div class="appointment-title"><?= $app['service'] ?></div>
                                    </div>
                                    <span class="status-badge badge-confirmed"><?= $app['status'] ?></span>
                                </div>
                                <div class="appointment-details">
                                    <div class="detail-item">
                                        <div class="detail-label">Date</div>
                                        <div class="detail-value"><?= $app['date'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Time</div>
                                        <div class="detail-value"><?= $app['time'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Service</div>
                                        <div class="detail-value"><?= $app['service'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Attendees</div>
                                        <div class="detail-value"><?= $app['attendees'] ?></div>
                                    </div>
                                </div>
                                <div class="appointment-actions">
                                    <button class="action-btn btn-outline view-details-btn">
                                        <i class="bi bi-eye"></i> View Details
                                    </button>
                                    <a href="reschedule.php?id=<?= $app['id'] ?>" class="action-btn btn-outline">
                                        <i class="bi bi-calendar-event"></i> Reschedule
                                    </a>
                                    <button class="action-btn btn-danger cancel-appointment-btn" data-app-id="<?= $app['id'] ?>">
                                        <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    <?php else: ?>
                        <div class="empty-state">
                            <i class="bi bi-calendar-x"></i>
                            <h4>No Upcoming Appointments</h4>
                            <p>You don't have any confirmed appointments scheduled.</p>
                            <a href="userSide.php#calendar" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i>Book New Appointment
                            </a>
                        </div>
                    <?php endif; ?>
                </div>
                
                <!-- Pending Requests Tab -->
                <div class="tab-pane fade <?= $active_tab === 'pending' ? 'show active' : '' ?>" id="pending" role="tabpanel">
                    <?php if($counts['pending'] > 0): ?>
                        <div class="d-flex align-items-center mb-4" style="gap: 0.5rem; margin-bottom:2rem!important;"> <!-- mb-4 for more space -->
                            <span class="me-1" style="font-size:1.2rem;color:#6c757d;"><i class="bi bi-sort-down"></i></span>
                            <div class="custom-dropdown" id="pendingSortDropdown">
                                <button type="button" class="custom-dropdown-btn" id="pendingSortBtn" aria-haspopup="listbox" aria-expanded="false">
                                    Sort: <span id="pendingSortLabel">Latest to Oldest</span>
                                    <i class="bi bi-chevron-down custom-dropdown-chevron"></i>
                                </button>
                                <div class="custom-dropdown-menu" role="listbox">
                                    <button class="custom-dropdown-item pending-sort-option selected" type="button" data-value="desc">
                                        <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>Latest to Oldest
                                    </button>
                                    <button class="custom-dropdown-item pending-sort-option" type="button" data-value="asc">
                                        <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>Oldest to Latest
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div id="pendingRequestsContainer">
                            <?php 
                            // Pending Requests: sort by requested (created_at) DESC
                            $pendingApps = array_filter($appointments, function($app) {
                                if ($app['status'] !== 'Pending Approval') return false;
                                $appointmentDateTime = strtotime($app['date'] . ' ' . $app['time']);
                                return $appointmentDateTime >= time();
                            });
                            usort($pendingApps, function($a, $b) {
                                return strtotime($b['requested']) - strtotime($a['requested']);
                            });
                            foreach ($pendingApps as $app): ?>
                                <div class="appointment-card" 
                                     data-appointment='<?= htmlspecialchars(json_encode($app), ENT_QUOTES, 'UTF-8') ?>'
                                     data-requested="<?= strtotime($app['requested']) ?>">
                                    <div class="appointment-header">
                                        <div>
                                            <div class="appointment-ref"><?= $app['app_id'] ?></div>
                                            <div class="appointment-title"><?= $app['service'] ?></div>
                                        </div>
                                        <span class="status-badge badge-pending"><?= $app['status'] ?></span>
                                    </div>
                                    <div class="appointment-details">
                                        <div class="detail-item">
                                            <div class="detail-label">Date</div>
                                            <div class="detail-value"><?= $app['date'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Time</div>
                                            <div class="detail-value"><?= $app['time'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Service</div>
                                            <div class="detail-value"><?= $app['service'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Attendees</div>
                                            <div class="detail-value"><?= $app['attendees'] ?></div>
                                        </div>
                                    </div>
                                    <div class="appointment-actions">
                                        <button class="action-btn btn-outline view-details-btn">
                                            <i class="bi bi-eye"></i> View Details
                                        </button>
                                        <button class="action-btn btn-outline edit-request-btn" 
                                                data-appointment-id="<?= $app['id'] ?>"
                                                data-purpose="<?= htmlspecialchars($app['purpose']) ?>"
                                                data-attendees="<?= htmlspecialchars($app['attendees']) ?>"
                                                data-attachments='<?= htmlspecialchars(json_encode($app['attachments']), ENT_QUOTES) ?>'>
                                            <i class="bi bi-pencil"></i> Edit Request
                                        </button>
                                        <button class="action-btn btn-danger cancel-appointment-btn" data-app-id="<?= $app['id'] ?>">
                                            <i class="bi bi-x-circle"></i> Cancel Request
                                        </button>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                        
                        <!-- What happens next information -->
                        <div class="mt-4 p-4 bg-light rounded-3 border-start border-4 border-warning">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-info-circle-fill text-warning me-3" style="font-size: 1.5rem; margin-top: 2px;"></i>
                                <div>
                                    <h6 class="mb-3 text-dark fw-semibold">What happens next?</h6>
                                    <ul class="list-unstyled mb-0">
                                        <li class="mb-2">
                                            <i class="bi bi-clock me-2 text-muted"></i>
                                            <span class="text-muted">Our staff will review your appointment request within <strong>24-48 hours</strong></span>
                                        </li>
                                        <li class="mb-2">
                                            <i class="bi bi-envelope me-2 text-muted"></i>
                                            <span class="text-muted">You will receive an <strong>email notification</strong> once your appointment is approved or if any changes are needed</span>
                                        </li>
                                        <li class="mb-0">
                                            <i class="bi bi-check-circle me-2 text-muted"></i>
                                            <span class="text-muted">Please check your <strong>email regularly</strong> for updates</span>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    <?php else: ?>
                        <div class="empty-state">
                            <i class="bi bi-hourglass-split"></i>
                            <h4>No Pending Requests</h4>
                            <p>You don't have any pending appointment requests.</p>
                            <p class="text-muted mt-2">
                                <small>If you recently created an appointment, it should appear here shortly. 
                                If you believe this is an error, please contact support.</small>
                            </p>
                        </div>
                    <?php endif; ?>
                </div>
                
                <!-- Lapsed Pending Tab -->
                <div class="tab-pane fade <?= $active_tab === 'lapsed' ? 'show active' : '' ?>" id="lapsed" role="tabpanel">
                    <?php
                    // Lapsed Pending: Pending Approval with date/time in the past
                    $lapsedApps = array_filter($appointments, function($app) {
                        if ($app['status'] !== 'Pending Approval') return false;
                        $appointmentDateTime = strtotime($app['date'] . ' ' . $app['time']);
                        return $appointmentDateTime < time();
                    });
                    if (count($lapsedApps) > 0): ?>
                        <?php foreach ($lapsedApps as $app): ?>
                            <div class="appointment-card" 
                                 data-appointment='<?= htmlspecialchars(json_encode($app), ENT_QUOTES, 'UTF-8') ?>'>
                                <div class="appointment-header">
                                    <div>
                                        <div class="appointment-ref"><?= $app['app_id'] ?></div>
                                        <div class="appointment-title"><?= $app['service'] ?></div>
                                    </div>
                                    <span class="status-badge badge-pending">Lapsed Pending</span>
                                </div>
                                <div class="appointment-details">
                                    <div class="detail-item">
                                        <div class="detail-label">Date</div>
                                        <div class="detail-value"><?= $app['date'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Time</div>
                                        <div class="detail-value"><?= $app['time'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Service</div>
                                        <div class="detail-value"><?= $app['service'] ?></div>
                                    </div>
                                    <div class="detail-item">
                                        <div class="detail-label">Attendees</div>
                                        <div class="detail-value"><?= $app['attendees'] ?></div>
                                    </div>
                                </div>
                                <div class="appointment-actions">
                                    <button class="action-btn btn-outline view-details-btn">
                                        <i class="bi bi-eye"></i> View Details
                                    </button>
                                    <button class="action-btn btn-danger cancel-appointment-btn" data-app-id="<?= $app['id'] ?>">
                                        <i class="bi bi-x-circle"></i> Cancel Request
                                    </button>
                                </div>
                            </div>
                        <?php endforeach; ?>
                    <?php else: ?>
                        <div class="empty-state">
                            <i class="bi bi-hourglass-bottom"></i>
                            <h4>No Lapsed Pending Requests</h4>
                            <p>You have no pending requests that have lapsed their scheduled date and time.</p>
                        </div>
                    <?php endif; ?>
                </div>
                
                <!-- History Tab -->
                <div class="tab-pane fade <?= $active_tab === 'history' ? 'show active' : '' ?>" id="history" role="tabpanel">
                    <div class="d-flex align-items-center mb-4" style="gap: 0.5rem; margin-bottom:2rem!important;">
                        <span class="me-1" style="font-size:1.2rem;color:#6c757d;"><i class="bi bi-funnel"></i></span>
                        <div class="custom-dropdown" id="historyFilterDropdown">
                            <button type="button" class="custom-dropdown-btn" id="historyFilterBtn" aria-haspopup="listbox" aria-expanded="false">
                                Show: <span id="historyFilterLabel">All</span>
                                <i class="bi bi-chevron-down custom-dropdown-chevron"></i>
                            </button>
                            <div class="custom-dropdown-menu" role="listbox">
                                <button class="custom-dropdown-item history-filter-option selected" type="button" data-value="all">
                                    <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>All
                                </button>
                                <button class="custom-dropdown-item history-filter-option" type="button" data-value="Completed">
                                    <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>Completed
                                </button>
                                <button class="custom-dropdown-item history-filter-option" type="button" data-value="Cancelled">
                                    <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>Cancelled
                                </button>
                                <button class="custom-dropdown-item history-filter-option" type="button" data-value="Declined">
                                    <span class="custom-dropdown-check"><i class="bi bi-check2"></i></span>Declined
                                </button>
                            </div>
                        </div>
                    </div>
                    <?php
                    $historyApps = array_filter($appointments, function($app) {
                        return $app['status'] === 'Completed' || $app['status'] === 'Cancelled' || $app['status'] === 'Declined';
                    });
                    if (count($historyApps) > 0): ?>
                        <div id="historyAppointmentsContainer" data-status="all">
                            <?php foreach ($historyApps as $app): ?>
                                <div class="appointment-card" 
                                     data-appointment='<?= htmlspecialchars(json_encode($app), ENT_QUOTES, 'UTF-8') ?>'
                                     data-status="<?= $app['status'] ?>">
                                    <div class="appointment-header">
                                        <div>
                                            <div class="appointment-ref"><?= $app['app_id'] ?></div>
                                            <div class="appointment-title"><?= $app['service'] ?></div>
                                        </div>
                                        <?php if ($app['status'] === 'Completed'): ?>
                                            <span class="status-badge badge-completed">Completed</span>
                                        <?php elseif ($app['status'] === 'Cancelled'): ?>
                                            <span class="status-badge badge-cancelled">Cancelled</span>
                                        <?php elseif ($app['status'] === 'Declined'): ?>
                                            <span class="status-badge badge-declined">Declined</span>
                                        <?php endif; ?>
                                    </div>
                                    <div class="appointment-details">
                                        <div class="detail-item">
                                            <div class="detail-label">Date</div>
                                            <div class="detail-value"><?= $app['date'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Time</div>
                                            <div class="detail-value"><?= $app['time'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Service</div>
                                            <div class="detail-value"><?= $app['service'] ?></div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Attendees</div>
                                            <div class="detail-value"><?= $app['attendees'] ?></div>
                                        </div>
                                    </div>
                                    <div class="appointment-actions">
                                        <button class="action-btn btn-outline view-details-btn">
                                            <i class="bi bi-eye"></i> View Details
                                        </button>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                    <?php else: ?>
                        <div class="empty-state">
                            <i class="bi bi-folder-x"></i>
                            <h4>No Appointment History</h4>
                            <p>You don't have any completed, cancelled, or declined appointments yet.</p>
                        </div>
                    <?php endif; ?>
                    <div id="historyEmptyState" class="empty-state" style="display:none;">
                        <i class="bi bi-folder-x"></i>
                        <h4>No matching appointment history</h4>
                        <p>There are no appointments matching your selected filter.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Selected Category Display -->
        <div class="selected-category-section" id="selectedCategorySection" style="display: none;">
            <div class="category-header">
                <button class="back-btn" id="backToDashboard">
                    <i class="bi bi-arrow-left"></i> Back to Dashboard
                </button>
                <h5 class="category-title" id="categoryTitle"></h5>
            </div>
            <div class="category-appointments" id="categoryAppointments">
                <!-- Appointments will be loaded here -->
            </div>
        </div>
        
        <div class="footer">
            <p>&copy; <?= date('Y') ?> Solano Mayor's Office Appointment System. All Rights Reserved. | v2.0</p>
            <p class="mt-2 text-muted">Logged in as: <?= htmlspecialchars($username) ?> (ID: <?= $user_id ? $user_id : 'Guest' ?>)</p>
        </div>
    </div>
    
    <!-- Off-Canvas Panel -->
    <div class="offcanvas-backdrop" id="offcanvasBackdrop"></div>
    <div class="offcanvas-container" id="appointmentDetailsCanvas">
        <div class="offcanvas-header">
            <h3 class="offcanvas-title">Appointment Details</h3>
            <button class="close-offcanvas" id="closeOffcanvas">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <div class="offcanvas-body" id="offcanvasBody">
            <!-- Content will be populated by JavaScript -->
        </div>
    </div>
    
    <!-- Preview Modal -->
    <div class="preview-modal" id="previewModal">
        <div class="preview-content">
            <div class="preview-header">
                <h5 id="previewFileName">Attachment Preview</h5>
                <button class="btn btn-sm btn-outline-danger" id="closePreview">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="preview-body" id="previewBody">
                <div class="unsupported-preview">
                    <i class="bi bi-file-earmark-text display-1 text-muted"></i>
                    <h5>Preview not available</h5>
                    <p>This file type cannot be previewed. Please download the file to view it.</p>
                </div>
            </div>
            <div class="preview-actions" id="previewActions">
                <a href="#" class="btn btn-primary" id="downloadFile" download>
                    <i class="bi bi-download"></i> Download
                </a>
                <button class="btn btn-outline-secondary" id="closePreviewBtn">Close</button>
            </div>
        </div>
    </div>
    
    <!-- Edit Appointment Modal -->
    <div class="edit-modal" id="editAppointmentModal">
        <div class="edit-modal-content">
            <div class="edit-modal-header">
                <h4 class="mb-0">Edit Appointment Request</h4>
                <button class="btn btn-sm btn-light" id="closeEditModal">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="edit-modal-body">
                <form id="editAppointmentForm" method="post" action="update_appointment.php" enctype="multipart/form-data">
                    <input type="hidden" name="appointment_id" id="editAppointmentId">
                    
                    <div class="form-group">
                        <label for="editPurpose" class="form-label">Purpose of Appointment</label>
                        <textarea class="form-control" id="editPurpose" name="purpose" rows="3"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="editAttendees" class="form-label">Attendees</label>
                        <input type="text" class="form-control" id="editAttendees" name="attendees" 
                               placeholder="Enter names of attendees (comma separated)">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Existing Attachments</label>
                        <div class="existing-attachments" id="existingAttachmentsList">
                            <!-- Will be populated by JavaScript -->
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="newAttachments" class="form-label">Add New Attachments</label>
                        <input type="file" class="form-control" id="newAttachments" name="attachments[]" multiple>
                        <small class="form-text text-muted">You can add multiple files (PDF, JPG, PNG, DOC, DOCX)</small>
                    </div>
                </form>
            </div>
            <div class="edit-modal-footer">
                <button class="btn btn-cancel" id="cancelEdit">Cancel</button>
                <button class="btn btn-save" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>

    <!-- Cancel Confirmation Modal -->
    <div class="modal fade" id="cancelConfirmModal" tabindex="-1" aria-labelledby="cancelConfirmModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-danger text-white">
            <h5 class="modal-title d-flex align-items-center" id="cancelConfirmModalLabel">
              <i class="bi bi-exclamation-octagon me-2"></i> Cancel Appointment
            </h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="d-flex align-items-center">
              <i class="bi bi-x-circle display-5 text-danger me-3"></i>
              <div>
                <div>Are you sure you want to <span class="fw-bold text-danger">cancel</span> this appointment?</div>
                <small class="text-muted">This action cannot be undone. You will not be able to attend this appointment if cancelled.</small>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, Keep</button>
            <button type="button" class="btn btn-danger" id="confirmCancelBtn">
              <i class="bi bi-x-circle me-1"></i> Yes, Cancel
            </button>
          </div>
        </div>
      </div>
    </div>


    <!-- Remove Attachment Confirmation Modal -->
    <div class="modal fade" id="removeAttachmentModal" tabindex="-1" aria-labelledby="removeAttachmentModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-danger text-white">
            <h5 class="modal-title" id="removeAttachmentModalLabel"><i class="bi bi-exclamation-triangle me-2"></i>Remove Attachment</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="d-flex align-items-center">
              <i class="bi bi-file-earmark-x display-5 text-danger me-3"></i>
              <div>
                <div>Are you sure you want to remove <span id="removeAttachmentFileName" class="fw-bold"></span>?</div>
                <small class="text-muted">This action cannot be undone.</small>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-danger" id="confirmRemoveAttachmentBtn">Remove</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Toast for cancellation -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 2000;">
      <div id="cancelToast" class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
          <div class="toast-body">
            Appointment cancelled successfully.
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      </div>
    </div>

    <!-- Toast for attachment removal -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 2000;">
      <div id="removeAttachmentToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
          <div class="toast-body">
            Attachment removed successfully.
          </div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
      </div>
    </div>

    <!-- Load JavaScript asynchronously -->
    <script src="shared_appointments.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" defer></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const offcanvas = document.getElementById('appointmentDetailsCanvas');
            const offcanvasBody = document.getElementById('offcanvasBody');
            const offcanvasBackdrop = document.getElementById('offcanvasBackdrop');
            const closeOffcanvas = document.getElementById('closeOffcanvas');
            const viewDetailsBtns = document.querySelectorAll('.view-details-btn');
            const appointmentCards = document.querySelectorAll('.appointment-card');
            
            // Function to open off-canvas with appointment details
           function openAppointmentDetails(appointment) {
    console.log('Opening appointment details for:', appointment);
    const offcanvasBody = document.getElementById('offcanvasBody');
    
    // Build HTML for decline reason
    const declineHTML = (appointment.status === 'Declined' && appointment.decline_reason)
        ? `
           <div class="alert alert-danger mb-4 p-3">
            <div class="d-flex align-items-start">
                <i class="bi bi-exclamation-triangle-fill fs-4 me-3 mt-1"></i>
                <div>
                    <h6 class="mb-2 fw-bold">Appointment Declined</h6>
                    <div class="bg-white p-3 rounded border">
                        <p class="mb-0 text-dark"><strong>Reason:</strong> ${appointment.decline_reason}</p>
                    </div>
                </div>
            </div>
        </div>
        `
        : '';

    offcanvasBody.innerHTML = `
        <div class="offcanvas-details-wrapper">
            ${declineHTML}
            <div class="offcanvas-section mb-4">
                <div class="d-flex align-items-center mb-3">
                    <div class="me-3">
                        <span class="status-badge ${
                            appointment.status === 'Pending Approval' ? 'badge-pending' :
                            appointment.status === 'Confirmed' ? 'badge-confirmed' :
                            appointment.status === 'Completed' ? 'badge-completed' :
                            appointment.status === 'Cancelled' ? 'badge-cancelled' :
                            appointment.status === 'Declined' ? 'badge-declined' : 'badge-cancelled'
                        }">${appointment.status}</span>
                    </div>
                    <h3 class="offcanvas-title mb-0">${appointment.title}</h3>
                </div>
                <div class="row g-3">
                    <div class="col-12 col-md-6">
                        <div class="info-label">Date</div>
                        <div class="info-value">${appointment.date}</div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="info-label">Time</div>
                        <div class="info-value">${appointment.time}</div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="info-label">Service</div>
                        <div class="info-value">${appointment.service}</div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="info-label">Reference ID</div>
                        <div class="info-value">${appointment.app_id}</div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="info-label">Department</div>
                        <div class="info-value">${appointment.department}</div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="info-label">Attendees</div>
                        <div class="info-value">${appointment.attendees}</div>
                    </div>
                    <div class="col-12">
                        <div class="info-label">Purpose</div>
                        <div class="info-value">${appointment.purpose}</div>
                    </div>
                </div>
            </div>
            ${appointment.attachments.length > 0 ? `
            <div class="offcanvas-section mb-4">
                <div class="section-title mb-2">
                    <i class="bi bi-paperclip"></i>
                    <span class="ms-2">Attachments</span>
                </div>
                <div class="file-preview-container">
                    ${appointment.attachments.map(attachment => `
                        <div class="file-preview-item" 
                             data-file="${attachment.name}"
                             data-type="${attachment.type}">
                            <div class="file-preview-thumb">
                                <i class="bi ${attachment.icon} file-preview-icon ${attachment.color}"></i>
                            </div>
                            <div class="file-preview-info">
                                <div class="file-name">${attachment.name}</div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
            ` : ''}
            <div class="offcanvas-actions d-flex gap-1 mb-3">
                ${appointment.status === 'Pending Approval' ? `
                    <button class="action-btn btn-outline btn-sm edit-request-btn" 
                        data-appointment-id="${appointment.id}"
                        data-purpose="${appointment.purpose}"
                        data-attendees="${appointment.attendees}"
                        data-attachments='${JSON.stringify(appointment.attachments)}'>
                        <i class="bi bi-pencil me-1"></i> Edit Request
                    </button>
                ` : ''}
                ${(appointment.status === 'Pending Approval' || appointment.status === 'Confirmed') ? `
                    <button class="action-btn btn-danger btn-sm cancel-appointment-btn" 
                        data-app-id="${appointment.id}">
                        <i class="bi bi-x-circle me-1"></i> 
                        ${appointment.status === 'Pending Approval' ? 'Cancel Request' : 'Cancel Appointment'}
                    </button>
                ` : ''}
                ${appointment.status === 'Confirmed' ? `
                    <a href="reschedule.php?id=${appointment.id}" class="action-btn btn-outline btn-sm reschedule-appointment-btn">
                        <i class="bi bi-calendar-event me-1"></i> Reschedule
                    </a>
                ` : ''}
                <button class="action-btn btn-primary btn-sm">
                    <i class="bi bi-printer me-1"></i> Print Details
                </button>
            </div>
            <div class="offcanvas-section mb-4">
                <div class="section-title mb-2">
                    <i class="bi bi-geo-alt"></i>
                    <span class="ms-2">Appointment Tracking</span>
                </div>
                <div class="tracking-timeline">
                    <div class="timeline-bar"></div>
                    <div class="timeline-progress" style="height: ${appointment.progress}%;"></div>
                    ${appointment.timeline.map(step => `
                        <div class="timeline-step">
                            <div class="step-indicator ${step.status}">
                                ${step.status === 'completed' ?
                                    '<i class="bi bi-check"></i>' :
                                    step.status === 'active' ?
                                    '<i class="bi bi-record-circle"></i>' :
                                    '<i class="bi bi-circle"></i>'}
                            </div>
                            <div class="step-content ${step.status}">
                                <div class="step-title">
                                    <i class="bi bi-${
                                        step.step === 'Appointment Requested' ? 'calendar-plus' :
                                        (step.step === 'Appointment Confirmed' ? 'check-circle' :
                                        (step.step === 'Scheduled' ? 'clock' :
                                        (step.step === 'Completed' ? 'check2-all' : 'x-circle')))
                                    }"></i>
                                    ${step.step}
                                </div>
                                ${step.date ? `<div class="step-date">${step.date}</div>` : ''}
                                <div class="step-desc">
                                    ${
                                        step.step === 'Appointment Requested' ? 
                                        'Your appointment request has been submitted' : 
                                        step.step === 'Appointment Confirmed' ? 
                                        'Your appointment has been confirmed by our staff' : 
                                        step.step === 'Scheduled' ? 
                                        'Your appointment is scheduled for the selected time' : 
                                        step.step === 'Completed' ? 
                                        'Appointment was successfully completed' : 
                                        step.step === 'Cancelled' ? 
                                        'Appointment was cancelled' : 
                                        step.step === 'Declined' ? 
                                        'Appointment was declined by admin staff' : 
                                        (appointment.status === 'Declined' && step.step === 'Pending Approval') ? 
                                        'Your appointment request is under review by admin staff' : 
                                        (appointment.status === 'Declined' && step.step === 'Confirmation') ? 
                                        'Your appointment request was declined by admin staff' : 
                                        (appointment.status === 'Pending Approval' && step.step === 'Pending Approval') ? 
                                        'Your appointment request is under review by admin staff' : 
                                        (appointment.status === 'Pending Approval' && step.step === 'Confirmation') ? 
                                        'Awaiting admin approval' : 
                                        'Appointment was cancelled'
                                    }
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
                
                // Add event listeners to new file preview items
                document.querySelectorAll('#offcanvasBody .file-preview-item').forEach(item => {
                    item.addEventListener('click', function() {
                        const fileName = this.getAttribute('data-file');
                        const fileType = this.getAttribute('data-type');
                        showFilePreview(fileName, fileType);
                    });
                });
                
                // Add event listeners to action buttons in off-canvas
                const editBtn = offcanvasBody.querySelector('.edit-request-btn');
                if (editBtn) {
                    editBtn.addEventListener('click', function() {
                        const appointmentId = this.getAttribute('data-appointment-id');
                        const purpose = this.getAttribute('data-purpose');
                        const attendees = this.getAttribute('data-attendees');
                        const attachments = JSON.parse(this.getAttribute('data-attachments'));
                        
                        openEditModal(appointmentId, purpose, attendees, attachments);
                    });
                }
                
                // Cancel button in off-canvas
               
                
                // Open off-canvas
                offcanvas.classList.add('active');
                offcanvasBackdrop.classList.add('active');
            }
            
            // Open off-canvas when clicking on card or view button
            function handleAppointmentCardClick(card) {
                try {
                    const appointmentDataStr = card.getAttribute('data-appointment');
                    console.log('Appointment data string:', appointmentDataStr);
                    
                    if (!appointmentDataStr) {
                        console.error('No appointment data found on card');
                        return;
                    }
                    
                    // Decode HTML entities back to proper JSON
                    const decodedDataStr = appointmentDataStr.replace(/&#39;/g, "'").replace(/&quot;/g, '"');
                    console.log('Decoded appointment data string:', decodedDataStr);
                    
                    const appointmentData = JSON.parse(decodedDataStr);
                    console.log('Parsed appointment data:', appointmentData);
                    openAppointmentDetails(appointmentData);
                } catch (error) {
                    console.error('Error parsing appointment data:', error);
                    console.log('Card element:', card);
                }
            }
            
            // Add event listeners to appointment cards
            function attachCardEventListeners(container = document) {
                const cards = container.querySelectorAll('.appointment-card:not([data-listeners-attached])');
                const viewBtns = container.querySelectorAll('.view-details-btn:not([data-listener-attached])');
                
                cards.forEach(card => {
                    card.addEventListener('click', function(e) {
                        // Don't trigger if clicked on action button
                        if (!e.target.closest('.action-btn')) {
                            handleAppointmentCardClick(this);
                        }
                    });
                    card.setAttribute('data-listeners-attached', 'true');
                });
                
                console.log('Found', viewBtns.length, 'new view details buttons');
                
                viewBtns.forEach(btn => {
                    btn.addEventListener('click', function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        console.log('View details button clicked');
                        const card = this.closest('.appointment-card');
                        console.log('Found card:', card);
                        if (card) {
                            handleAppointmentCardClick(card);
                        } else {
                            console.error('No appointment card found for this button');
                        }
                    });
                    btn.setAttribute('data-listener-attached', 'true');
                });
            }
            
            // Dashboard card interactions
            function initDashboardCards() {
                const dashboardCards = document.querySelectorAll('.dashboard-card');
                const dashboardGrid = document.querySelector('.dashboard-grid');
                const selectedCategorySection = document.getElementById('selectedCategorySection');
                const categoryTitle = document.getElementById('categoryTitle');
                const categoryAppointments = document.getElementById('categoryAppointments');
                const backBtn = document.getElementById('backToDashboard');
                const appointmentSections = document.querySelector('.appointment-sections');

                dashboardCards.forEach(card => {
                    card.addEventListener('click', function() {
                        // Remove selected class from all cards
                        dashboardCards.forEach(c => c.classList.remove('selected'));
                        // Add selected class to clicked card
                        this.classList.add('selected');
                        
                        const category = this.getAttribute('data-category');
                        showCategoryAppointments(category);
                    });
                });

                backBtn.addEventListener('click', function() {
                    // Remove selected class from all cards when going back
                    dashboardCards.forEach(c => c.classList.remove('selected'));
                    selectedCategorySection.style.display = 'none';
                    dashboardGrid.style.display = 'grid';
                });

                function showCategoryAppointments(category) {
                    // Hide dashboard grid
                    dashboardGrid.style.display = 'none';
                    appointmentSections.style.display = 'none';
                    
                    // Show selected category section
                    selectedCategorySection.style.display = 'block';
                    
                    // Smooth scroll to appointments on all devices
                    setTimeout(() => {
                        selectedCategorySection.scrollIntoView({ 
                            behavior: 'smooth', 
                            block: 'start' 
                        });
                    }, 100);
                    
                    // Update title
                    const titles = {
                        'upcoming': 'Upcoming Appointments',
                        'pending': 'Pending Requests', 
                        'history': 'Appointment History',
                        'lapsed': 'Lapsed Requests'
                    };
                    categoryTitle.textContent = titles[category] || 'Appointments';
                    
                    // Load appointments for category
                    loadCategoryAppointments(category);
                }

                function loadCategoryAppointments(category) {
                    let appointmentsHTML = '';
                    
                    <?php
                    // Generate JavaScript arrays for each category
                    $upcomingApps = array_filter($appointments, function($app) { return $app['status'] === 'Confirmed'; });
                    $pendingApps = array_filter($appointments, function($app) { return $app['status'] === 'Pending Approval'; });
                    $historyApps = array_filter($appointments, function($app) { return in_array($app['status'], ['Completed', 'Cancelled', 'Declined']); });
                    $lapsedApps = array_filter($appointments, function($app) { return $app['status'] === 'Lapsed'; });
                    ?>
                    
                    const appointmentData = {
                        upcoming: <?= json_encode(array_values($upcomingApps)) ?>,
                        pending: <?= json_encode(array_values($pendingApps)) ?>,
                        history: <?= json_encode(array_values($historyApps)) ?>,
                        lapsed: <?= json_encode(array_values($lapsedApps)) ?>
                    };
                    
                    const appointments = appointmentData[category] || [];
                    
                    if (appointments.length === 0) {
                        appointmentsHTML = `
                            <div class="empty-state">
                                <i class="bi bi-folder-x"></i>
                                <h4>No ${category} appointments</h4>
                                <p>You don't have any ${category} appointments at the moment.</p>
                            </div>
                        `;
                    } else {
                        appointments.forEach(app => {
                            const statusClass = app.status === 'Pending Approval' ? 'badge-pending' :
                                              app.status === 'Confirmed' ? 'badge-confirmed' :
                                              app.status === 'Completed' ? 'badge-completed' :
                                              app.status === 'Cancelled' ? 'badge-cancelled' :
                                              app.status === 'Declined' ? 'badge-declined' : 'badge-cancelled';
                            
                            const escapedAppData = JSON.stringify(app).replace(/'/g, '&#39;').replace(/"/g, '&quot;');
                            appointmentsHTML += `
                                <div class="appointment-card" data-appointment='${escapedAppData}'>
                                    <div class="appointment-header">
                                        <div>
                                            <div class="appointment-ref">${app.app_id}</div>
                                            <div class="appointment-title">${app.service}</div>
                                        </div>
                                        <span class="status-badge ${statusClass}">${app.status}</span>
                                    </div>
                                    <div class="appointment-details">
                                        <div class="detail-item">
                                            <div class="detail-label">Date</div>
                                            <div class="detail-value">${app.date}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Time</div>
                                            <div class="detail-value">${app.time}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Service</div>
                                            <div class="detail-value">${app.service}</div>
                                        </div>
                                        <div class="detail-item">
                                            <div class="detail-label">Attendees</div>
                                            <div class="detail-value">${app.attendees}</div>
                                        </div>
                                    </div>
                                    <div class="appointment-actions">
                                        <button class="action-btn btn-outline view-details-btn">
                                            <i class="bi bi-eye"></i> View Details
                                        </button>
                                    </div>
                                </div>
                            `;
                        });
                    }
                    
                    categoryAppointments.innerHTML = appointmentsHTML;
                    
                    // Re-attach event listeners for new cards in the specific container
                    attachCardEventListeners(categoryAppointments);
                }
            }

            // Initial attachment of event listeners
            attachCardEventListeners();
            initDashboardCards();
            
            // Close off-canvas
            function closeOffcanvasPanel() {
                offcanvas.classList.remove('active');
                offcanvasBackdrop.classList.remove('active');
            }
            
            closeOffcanvas.addEventListener('click', closeOffcanvasPanel);
            offcanvasBackdrop.addEventListener('click', closeOffcanvasPanel);
            
            // Add swipe gesture support for mobile
            let startX = 0;
            let currentX = 0;
            let isDragging = false;
            
            offcanvas.addEventListener('touchstart', function(e) {
                startX = e.touches[0].clientX;
                isDragging = true;
            });
            
            offcanvas.addEventListener('touchmove', function(e) {
                if (!isDragging) return;
                currentX = e.touches[0].clientX;
                const diffX = currentX - startX;
                
                // Only allow swipe right (positive direction)
                if (diffX > 0) {
                    const translateX = Math.min(diffX, 300); // Max 300px drag
                    offcanvas.style.transform = `translateX(${translateX}px)`;
                    offcanvas.style.transition = 'none';
                }
            });
            
            offcanvas.addEventListener('touchend', function(e) {
                if (!isDragging) return;
                isDragging = false;
                
                const diffX = currentX - startX;
                
                // Reset transform and transition
                offcanvas.style.transform = '';
                offcanvas.style.transition = '';
                
                // If swiped more than 100px to the right, close the off-canvas
                if (diffX > 100) {
                    closeOffcanvasPanel();
                }
            });
            
            // File preview functionality
            const previewModal = document.getElementById('previewModal');
            const previewBody = document.getElementById('previewBody');
            const previewFileName = document.getElementById('previewFileName');
            const downloadFile = document.getElementById('downloadFile');
            
            // Function to show file preview
            function showFilePreview(fileName, fileType) {
                const fileUrl = `uploads/${fileName}`;
                
                previewFileName.textContent = fileName;
                downloadFile.setAttribute('href', fileUrl);
                downloadFile.setAttribute('download', fileName);
                
                // Clear previous content
                previewBody.innerHTML = '';
                
                // Handle different file types
                const imageTypes = ['jpg', 'jpeg', 'png', 'gif'];
                const pdfTypes = ['pdf'];
                
                if (imageTypes.includes(fileType.toLowerCase())) {
                    const img = document.createElement('img');
                    img.src = fileUrl;
                    img.className = 'preview-image';
                    img.alt = fileName;
                    previewBody.appendChild(img);
                } 
                else if (pdfTypes.includes(fileType.toLowerCase())) {
                    const iframe = document.createElement('iframe');
                    iframe.src = fileUrl;
                    iframe.className = 'preview-iframe';
                    previewBody.appendChild(iframe);
                }
                else {
                    const unsupported = document.createElement('div');
                    unsupported.className = 'unsupported-preview';
                    unsupported.innerHTML = `
                        <i class="bi bi-file-earmark-text display-1 text-muted"></i>
                        <h5>Preview not available</h5>
                        <p>This file type cannot be previewed. Please download the file to view it.</p>
                    `;
                    previewBody.appendChild(unsupported);
                }
                
                previewModal.classList.add('active');
            }
            
            // Close modal buttons
            document.getElementById('closePreview').addEventListener('click', function() {
                previewModal.classList.remove('active');
            });
            
            document.getElementById('closePreviewBtn').addEventListener('click', function() {
                previewModal.classList.remove('active');
            });
            
            // Close modal when clicking outside content
            previewModal.addEventListener('click', function(e) {
                if (e.target === this) {
                    previewModal.classList.remove('active');
                }
            });
            
            // Edit Request functionality
            const editModal = document.getElementById('editAppointmentModal');
            const editBtns = document.querySelectorAll('.edit-request-btn');
            const closeEditModalBtn = document.getElementById('closeEditModal');
            const cancelEditBtn = document.getElementById('cancelEdit');
            const saveChangesBtn = document.getElementById('saveChanges');
            
            // Open edit modal
            function openEditModal(appointmentId, purpose, attendees, attachments) {
                // Populate form
                document.getElementById('editAppointmentId').value = appointmentId;
                document.getElementById('editPurpose').value = purpose;
                document.getElementById('editAttendees').value = attendees;
                
                // Populate attachments list
                const attachmentsList = document.getElementById('existingAttachmentsList');
                attachmentsList.innerHTML = '';
                
                if (attachments.length > 0) {
                    attachments.forEach(attachment => {
                        const badge = document.createElement('div');
                        badge.className = 'attachment-badge';
                        badge.innerHTML = `
                            <span class="attachment-preview" 
                                  data-file="${attachment.name}" 
                                  data-type="${attachment.type}">
                                <i class="bi ${attachment.icon} ${attachment.color}"></i>
                                ${attachment.name}
                            </span>
                            <span class="attachment-remove" data-file="${attachment.name}">
                                <i class="bi bi-x"></i>
                            </span>
                        `;
                        attachmentsList.appendChild(badge);
                    });
                } else {
                    attachmentsList.innerHTML = '<p class="text-muted">No attachments uploaded</p>';
                }
                
                // Add click event for attachment preview in edit modal
                document.querySelectorAll('.attachment-preview').forEach(item => {
                    item.addEventListener('click', function(e) {
                        e.stopPropagation();
                        const fileName = this.getAttribute('data-file');
                        const fileType = this.getAttribute('data-type');
                        showFilePreview(fileName, fileType);
                    });
                });
                
                // Show modal
                editModal.style.display = 'block';
            }
            
            editBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const appointmentId = this.getAttribute('data-appointment-id');
                    const purpose = this.getAttribute('data-purpose');
                    const attendees = this.getAttribute('data-attendees');
                    const attachments = JSON.parse(this.getAttribute('data-attachments'));
                    
                    openEditModal(appointmentId, purpose, attendees, attachments);
                });
            });
            
            // Close edit modal
            function closeEditModal() {
                editModal.style.display = 'none';
            }
            
            closeEditModalBtn.addEventListener('click', closeEditModal);
            cancelEditBtn.addEventListener('click', closeEditModal);
            
            // Close modal when clicking outside
            window.addEventListener('click', function(e) {
                if (e.target === editModal) {
                    closeEditModal();
                }
            });
            
          
            
            // Save changes
            saveChangesBtn.addEventListener('click', function() {
                const form = document.getElementById('editAppointmentForm');
                saveChangesBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Saving...';
                saveChangesBtn.disabled = true;
                form.submit();
            });
            
            // Cancel appointment buttons in table
            const cancelButtons = document.querySelectorAll('.cancel-appointment-btn, .cancel-request-btn');
            cancelButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const row = this.closest('tr');
                    const title = row.querySelector('td:nth-child(2)').textContent;
                    const appId = this.getAttribute('data-app-id');
                    
                    if(confirm(`Are you sure you want to cancel "${title}"?`)) {
                        // Show loading state
                        row.style.opacity = '0.6';
                        row.querySelectorAll('button').forEach(btn => btn.disabled = true);
                        
                        // Simulate processing delay
                        setTimeout(() => {
                            alert('Appointment cancelled successfully.');
                            row.remove();
                        }, 1500);
                    }
                });
            });

            // Activate Pending tab if ?tab=pending in URL
            if (window.location.search.includes('tab=pending')) {
                var pendingTab = document.getElementById('pending-tab');
                if (pendingTab) {
                    pendingTab.click();
                }
            }

            // --- Custom Dropdown Logic (Reusable) ---
            function setupCustomDropdown(dropdownId, btnId, optionClass, labelId, callback) {
                const dropdown = document.getElementById(dropdownId);
                const btn = document.getElementById(btnId);
                const label = document.getElementById(labelId);
                const options = dropdown.querySelectorAll('.' + optionClass);
                // Toggle menu
                btn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    const expanded = btn.getAttribute('aria-expanded') === 'true';
                    btn.setAttribute('aria-expanded', !expanded);
                    btn.classList.toggle('open');
                    dropdown.classList.toggle('open');
                });
                // Option select
                options.forEach(function(option) {
                    option.addEventListener('click', function(e) {
                        e.preventDefault();
                        options.forEach(opt => opt.classList.remove('selected'));
                        this.classList.add('selected');
                        label.textContent = this.textContent.trim();
                        btn.setAttribute('aria-expanded', 'false');
                        btn.classList.remove('open');
                        dropdown.classList.remove('open');
                        if (callback) callback(this.getAttribute('data-value'), this.textContent.trim());
                    });
                });
                // Close on outside click
                document.addEventListener('click', function(e) {
                    if (!dropdown.contains(e.target)) {
                        btn.setAttribute('aria-expanded', 'false');
                        btn.classList.remove('open');
                        dropdown.classList.remove('open');
                    }
                });
            }
            // --- Pending Requests Sort Dropdown ---
            setupCustomDropdown(
                'pendingSortDropdown',
                'pendingSortBtn',
                'pending-sort-option',
                'pendingSortLabel',
                function(value) {
                    // Sort rows
                    const pendingTable = document.getElementById('pendingRequestsTable');
                    if (!pendingTable) return;
                    const tbody = pendingTable.querySelector('tbody');
                    const rows = Array.from(tbody.querySelectorAll('tr'));
                    rows.sort(function(a, b) {
                        const aTime = parseInt(a.getAttribute('data-requested'));
                        const bTime = parseInt(b.getAttribute('data-requested'));
                        return value === 'asc' ? aTime - bTime : bTime - aTime;
                    });
                    rows.forEach(row => tbody.appendChild(row));
                }
            );
            // --- History Tab Filter Dropdown ---
            setupCustomDropdown(
                'historyFilterDropdown',
                'historyFilterBtn',
                'history-filter-option',
                'historyFilterLabel',
                function(value) {
                    const filterValue = value.trim().toLowerCase();
                    document.querySelectorAll('#historyAppointmentsTable tbody tr').forEach(function(row) {
                        const rowStatus = (row.getAttribute('data-status') || '').trim().toLowerCase();
                        if (filterValue === 'all' || rowStatus === filterValue) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    });
                    updateHistoryEmptyState();
                }
            );

            let cancelAppId = null; // Store the appointment ID to cancel

            // Listen for cancel button in off-canvas and table
            document.addEventListener('click', function(e) {
                const cancelBtn = e.target.closest('.cancel-appointment-btn, .cancel-request-btn');
                if (cancelBtn) {
                    e.preventDefault();
                    cancelAppId = cancelBtn.getAttribute('data-app-id');
                    // Show the confirmation modal
                    var cancelModal = new bootstrap.Modal(document.getElementById('cancelConfirmModal'));
                    cancelModal.show();
                }
            });

            // Handle confirmation in modal
            document.getElementById('confirmCancelBtn').addEventListener('click', function() {
                if (!cancelAppId) return;
                // Hide modal
                var cancelModalEl = document.getElementById('cancelConfirmModal');
                var cancelModal = bootstrap.Modal.getInstance(cancelModalEl);
                cancelModal.hide();

                // Send cancellation request
                fetch('cancel_appointment.php', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: 'appointment_id=' + encodeURIComponent(cancelAppId)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show toast
                        var toastEl = document.getElementById('cancelToast');
                        var toast = new bootstrap.Toast(toastEl, { delay: 3500 });
                        toast.show();
                        // Optionally, remove the row or reload after a delay
                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        alert('Failed to cancel appointment: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch((err) => {
                    alert('Error cancelling appointment.');
                });
            });

            // Remove attachment handler with modal confirmation
            let fileToRemove = null;
            let badgeToRemove = null;
            document.addEventListener('click', function(e) {
                const removeBtn = e.target.closest('.attachment-remove');
                if (removeBtn) {
                    e.preventDefault();
                    fileToRemove = removeBtn.getAttribute('data-file');
                    badgeToRemove = removeBtn.closest('.attachment-badge');
                    document.getElementById('removeAttachmentFileName').textContent = fileToRemove;
                    // Forcibly hide the edit modal and any modal backdrop
                    document.getElementById('editAppointmentModal').classList.add('hide-modal-force');
                    let backdrop = document.querySelector('.modal-backdrop');
                    if (backdrop) backdrop.classList.add('hide-modal-force');
                    var removeModal = new bootstrap.Modal(document.getElementById('removeAttachmentModal'));
                    removeModal.show();
                }
            });
            // When the remove modal is closed, re-show the edit modal and its backdrop
            document.getElementById('removeAttachmentModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('editAppointmentModal').classList.remove('hide-modal-force');
                let backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) backdrop.classList.remove('hide-modal-force');
            });
            // Handle the Remove button in the confirmation modal
            document.getElementById('confirmRemoveAttachmentBtn').addEventListener('click', function() {
                if (!fileToRemove || !badgeToRemove) return;
                // Create hidden input to mark file for removal
                const removalInput = document.createElement('input');
                removalInput.type = 'hidden';
                removalInput.name = 'remove_attachments[]';
                removalInput.value = fileToRemove;
                document.getElementById('editAppointmentForm').appendChild(removalInput);
                // Remove from UI
                badgeToRemove.remove();

                // If no more attachments, show the message
                const attachmentsList = document.getElementById('existingAttachmentsList');
                if (!attachmentsList.querySelector('.attachment-badge')) {
                    attachmentsList.innerHTML = '<p class="text-muted">No attachments uploaded</p>';
                }

                // Show toast
                var toastEl = document.getElementById('removeAttachmentToast');
                var toast = new bootstrap.Toast(toastEl, { delay: 2000 });
                toast.show();

                // Hide modal
                var removeModalEl = document.getElementById('removeAttachmentModal');
                var removeModal = bootstrap.Modal.getInstance(removeModalEl);
                removeModal.hide();
                // Reset
                fileToRemove = null;
                badgeToRemove = null;
            });

            // Reschedule button now links to dedicated reschedule page
            // No JavaScript needed as it's a direct link
        });
    </script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Activate the correct tab based on URL parameter
      const urlParams = new URLSearchParams(window.location.search);
      const tabParam = urlParams.get('tab');
      if (tabParam) {
        const validTabs = ['upcoming', 'pending', 'lapsed', 'history'];
        if (validTabs.includes(tabParam)) {
          const targetTab = document.querySelector(`[data-bs-target="#${tabParam}"]`);
          if (targetTab) {
            targetTab.click();
          }
        }
      }
      
      // Auto-open appointment details if show_appointment parameter is present
      const showAppointmentId = urlParams.get('show_appointment');
      if (showAppointmentId) {
        // Find the appointment card with the matching ID
        const appointmentCards = document.querySelectorAll('.appointment-card');
        let targetCard = null;
        
        appointmentCards.forEach(card => {
          const appointmentData = JSON.parse(card.getAttribute('data-appointment'));
          if (appointmentData.id == showAppointmentId) {
            targetCard = card;
          }
        });
        
        if (targetCard) {
          // Trigger the view details button click
          const viewButton = targetCard.querySelector('.view-details-btn');
          if (viewButton) {
            setTimeout(() => {
              viewButton.click();
            }, 500); // Small delay to ensure tab switching is complete
          }
        }
      }
    });
    </script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // When the cancel modal is closed, re-show the off-canvas and its backdrop
      document.getElementById('cancelConfirmModal').addEventListener('hidden.bs.modal', function () {
        offcanvas.classList.remove('hide-offcanvas-force');
        offcanvasBackdrop.classList.remove('hide-offcanvas-force');
      });
    });
    </script>
    <script>
    function updateHistoryEmptyState() {
        const table = document.getElementById('historyAppointmentsTable');
        const emptyState = document.getElementById('historyEmptyState');
        const thead = document.getElementById('historyTableHead');
        if (!table || !emptyState || !thead) return;
        const visibleRows = Array.from(table.querySelectorAll('tbody tr')).filter(row => row.style.display !== 'none');
        if (visibleRows.length === 0) {
            emptyState.style.display = '';
            thead.style.display = 'none';
        } else {
            emptyState.style.display = 'none';
            thead.style.display = '';
        }
    }

    // Call this function at the end of your history filter callback:
    setupCustomDropdown(
        'historyFilterDropdown',
        'historyFilterBtn',
        'history-filter-option',
        'historyFilterLabel',
        function(value) {
            // ... your existing filter logic ...
            document.querySelectorAll('#historyAppointmentsTable tbody tr').forEach(function(row) {
                if (value === 'all' || row.getAttribute('data-status') === value) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
            updateHistoryEmptyState();
        }
    );
    </script>
    <script>
    // Consolidated modal handling for better performance
    document.addEventListener('DOMContentLoaded', function() {
        const cancelModal = document.getElementById('cancelConfirmModal');
        const offcanvas = document.getElementById('appointmentDetailsCanvas');
        const offcanvasBackdrop = document.getElementById('offcanvasBackdrop');
        
        if (cancelModal) {
            cancelModal.addEventListener('hidden.bs.modal', function () {
                // Remove forced hiding classes
                document.querySelectorAll('.hide-offcanvas-force').forEach(el => 
                    el.classList.remove('hide-offcanvas-force')
                );
                
                // Restore offcanvas visibility
                if (offcanvas) {
                    offcanvas.classList.add('active');
                    offcanvas.style.display = '';
                    offcanvas.style.visibility = '';
                }
                if (offcanvasBackdrop) {
                    offcanvasBackdrop.classList.add('active');
                    offcanvasBackdrop.style.display = '';
                    offcanvasBackdrop.style.visibility = '';
                }
            });
        }
    });
    
    // Performance monitoring
    if ('performance' in window) {
        window.addEventListener('load', function() {
            setTimeout(function() {
                const perfData = performance.getEntriesByType('navigation')[0];
                const lcp = performance.getEntriesByType('largest-contentful-paint')[0];
                
                console.log('Performance Metrics:');
                console.log('DOM Content Loaded:', perfData.domContentLoadedEventEnd - perfData.domContentLoadedEventStart, 'ms');
                console.log('Load Complete:', perfData.loadEventEnd - perfData.loadEventStart, 'ms');
                if (lcp) console.log('LCP:', lcp.startTime, 'ms');
                
                // Send to analytics if needed
                // analytics.track('page_performance', { lcp: lcp?.startTime, dcl: perfData.domContentLoadedEventEnd });
            }, 0);
        });
    }
    </script>
</body>
</html>